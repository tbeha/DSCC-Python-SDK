# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_replication_partner_volumes_summary_list import DeviceType4ReplicationPartnerVolumesSummaryList

class TestDeviceType4ReplicationPartnerVolumesSummaryList(unittest.TestCase):
    """DeviceType4ReplicationPartnerVolumesSummaryList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4ReplicationPartnerVolumesSummaryList:
        """Test DeviceType4ReplicationPartnerVolumesSummaryList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4ReplicationPartnerVolumesSummaryList`
        """
        model = DeviceType4ReplicationPartnerVolumesSummaryList()
        if include_optional:
            return DeviceType4ReplicationPartnerVolumesSummaryList(
                items = [
                    dscc.models.device_type4_replication_partner_volume_list.DeviceType4ReplicationPartnerVolumeList(
                        common_resource_attributes = dscc.models.common_resource_attributes.commonResourceAttributes(
                            cloud_state = 'CONNECTED', ), 
                        customer_id = 'fc5f41652a53497e88cdcebc715cc1cf', 
                        display_name = 'testVol624_1', 
                        domain = 'Domain2', 
                        generation = 0, 
                        group_id = '0af26e4430948dd5c37bea1757107caf', 
                        group_name = 'testGroup', 
                        group_object_id = 11, 
                        id = 'b23a03cf79a0830f507eebb90c30410c', 
                        is_remote_array_support_replication = True, 
                        local_volume_id = 21, 
                        local_volume_name = 'testVol624_1', 
                        remote_volume = dscc.models.device_type4_replication_partner_volume_list_remote_volume.DeviceType4ReplicationPartnerVolumeList_remoteVolume(
                            async_outstanding = -1, 
                            remote_volume_id = 31, 
                            remote_volume_name = 'testVol624_1.r', 
                            resync_iteration = '134383/1', 
                            resync_snapshot_name = 'rcpy.41.88.134', 
                            sync_iteration = 'NA', 
                            sync_percentage = 36, 
                            sync_snapshot_name = 'none', 
                            sync_status = 'Synced', 
                            target_name = 'sp2bh', 
                            volume_iteration = '134383/1', 
                            volume_last_sync_time = dscc.models.device_type4_sync_time.DeviceType4SyncTime(
                                ms = 1552301131100, 
                                tz = 'UTC', ), 
                            volume_sync_length = -1, 
                            volume_sync_offset = -1, ), 
                        resource_uri = '/api/v1/storage-systems/device-type4/7CE751P312/volumes/b23a03cf79a0830f507eebb90c30410c', 
                        system_id = '7CE816P0SR', 
                        system_wwn = '2FF70002AC020DA1', 
                        type = 'volume', )
                    ],
                page_limit = 1,
                page_offset = 1,
                request_uri = '/api/v1/storage-systems/device-type4/7CE751P312/applicationsets/0af26e4430948dd5c37bea1757107caf/replication-partners/0af26e4430548dd5c37bea1757107caf/volumes',
                total = 1
            )
        else:
            return DeviceType4ReplicationPartnerVolumesSummaryList(
        )
        """

    def testDeviceType4ReplicationPartnerVolumesSummaryList(self):
        """Test DeviceType4ReplicationPartnerVolumesSummaryList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
