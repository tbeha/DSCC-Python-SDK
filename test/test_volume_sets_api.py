# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.api.volume_sets_api import VolumeSetsApi


class TestVolumeSetsApi(unittest.TestCase):
    """VolumeSetsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = VolumeSetsApi()

    def tearDown(self) -> None:
        pass

    def test_device_type1_create_protection_policy(self) -> None:
        """Test case for device_type1_create_protection_policy

        Add protection policy on application set identified by {id} for a storage system Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_edit_protection_policies(self) -> None:
        """Test case for device_type1_edit_protection_policies

        Edit protection policy on application set identified by {id} for a storage system Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_edit_proximity_settings(self) -> None:
        """Test case for device_type1_edit_proximity_settings

        Change proximity settings of hosts where volume sets are exported identified by {id} and {systemId} from Primera / Alletra 9K
        """
        pass

    def test_device_type1_fix_protection_policy(self) -> None:
        """Test case for device_type1_fix_protection_policy

        Fix protection policy configuration on application set identified by {id} for a storage system Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_get_protection_policies(self) -> None:
        """Test case for device_type1_get_protection_policies

        Get details of protection policies configured on application set identified by {id} created on Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_get_proximity_settings(self) -> None:
        """Test case for device_type1_get_proximity_settings

        Get hosts and proximity details identified by application set {id} for Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_get_replication_partner_volumes_by_app_set_id(self) -> None:
        """Test case for device_type1_get_replication_partner_volumes_by_app_set_id

        Get volume details of replication partners identified by {appsetId} and {replicationPartnerId} for Primera / Alletra 9K
        """
        pass

    def test_device_type1_get_replication_partners_by_app_set_id(self) -> None:
        """Test case for device_type1_get_replication_partners_by_app_set_id

        Get details of Primera / Alletra 9K replication partners identified by {systemId} and {appsetId}
        """
        pass

    def test_device_type1_snapsets_get_by_id(self) -> None:
        """Test case for device_type1_snapsets_get_by_id

        Get details of snapsets identified by {snapsetId} for Applicationset identified by {appsetId} for Primera / Alletra 9K
        """
        pass

    def test_device_type1_volume_set_capacity_statistics_get_by_id(self) -> None:
        """Test case for device_type1_volume_set_capacity_statistics_get_by_id

        Get capacity details for an applicationset identified by appsetUid
        """
        pass

    def test_device_type1_volume_set_export(self) -> None:
        """Test case for device_type1_volume_set_export

        Export applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_volume_set_snapshot_delete_by_id(self) -> None:
        """Test case for device_type1_volume_set_snapshot_delete_by_id

        Remove Primera / Alletra 9K snapset in system identified by {snapsetId}
        """
        pass

    def test_device_type1_volume_set_snapshots_list(self) -> None:
        """Test case for device_type1_volume_set_snapshots_list

        Get snapshot details of volume sets identified by {id} for Primera / Alletra 9K
        """
        pass

    def test_device_type1_volume_set_unexport(self) -> None:
        """Test case for device_type1_volume_set_unexport

        Unexport applicationset identified by {appsetId} from Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_volume_set_volumes_list(self) -> None:
        """Test case for device_type1_volume_set_volumes_list

        Get volumes for an applicationset identified by appsetUid
        """
        pass

    def test_device_type1_volume_sets_create(self) -> None:
        """Test case for device_type1_volume_sets_create

        Create Application Set for a storage system Primera / Alletra 9K
        """
        pass

    def test_device_type1_volume_sets_delete_by_id(self) -> None:
        """Test case for device_type1_volume_sets_delete_by_id

        Delete applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_volume_sets_edit_by_id(self) -> None:
        """Test case for device_type1_volume_sets_edit_by_id

        Edit applicationset identified by {id} from Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1_volume_sets_get_by_id(self) -> None:
        """Test case for device_type1_volume_sets_get_by_id

        Get applicationset details for an applicationset identified by appsetUid
        """
        pass

    def test_device_type1_volume_sets_list(self) -> None:
        """Test case for device_type1_volume_sets_list

        Get all applicationset details for Primera / Alletra 9K
        """
        pass

    def test_device_type1_volume_sets_snapshot_create(self) -> None:
        """Test case for device_type1_volume_sets_snapshot_create

        Create snapshot for application set identified by {id}
        """
        pass

    def test_device_type1action_on_volume_sets(self) -> None:
        """Test case for device_type1action_on_volume_sets

        Actions on volume set identified by {id} and {systemId} from Primera / Alletra 9K
        """
        pass

    def test_device_type1get_supported_protection_types(self) -> None:
        """Test case for device_type1get_supported_protection_types

        Get supported protection types for application set identified by {id} on storage system Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type1remove_protection_policies(self) -> None:
        """Test case for device_type1remove_protection_policies

        Remove protection policy on application set identified by {id} for a storage system Primera / Alletra 9K identified by {systemId}
        """
        pass

    def test_device_type2_action_on_snapshot_collection(self) -> None:
        """Test case for device_type2_action_on_snapshot_collection

        Perform offline/online action on  snapshot collections of Nimble / Alletra 6K and associated with volume collection {volumeCollectionId}  in the system identified by {systemId}
        """
        pass

    def test_device_type2_action_on_volume_collection(self) -> None:
        """Test case for device_type2_action_on_volume_collection

        Perform handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}
        """
        pass

    def test_device_type2_action_on_volume_collection_id(self) -> None:
        """Test case for device_type2_action_on_volume_collection_id

        Perform demote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}
        """
        pass

    def test_device_type2_actionon_volume_collection(self) -> None:
        """Test case for device_type2_actionon_volume_collection

        Perform abort handover action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}
        """
        pass

    def test_device_type2_add_volumes_to_volume_collections(self) -> None:
        """Test case for device_type2_add_volumes_to_volume_collections

        Add volumes to Nimble / Alletra 6K volumes collection in system identified by {systemId}
        """
        pass

    def test_device_type2_create_snapshot_collections(self) -> None:
        """Test case for device_type2_create_snapshot_collections

        Create Nimble / Alletra 6K snapshot collection in system identified by {systemId}
        """
        pass

    def test_device_type2_edit_volume_collection_by_id(self) -> None:
        """Test case for device_type2_edit_volume_collection_by_id

        Edit  details of Nimble / Alletra 6K Volume-collections identified by {volumeCollectionId}
        """
        pass

    def test_device_type2_get_all_folders(self) -> None:
        """Test case for device_type2_get_all_folders

        Get all folders details by Nimble / Alletra 6K
        """
        pass

    def test_device_type2_get_all_volume_collections(self) -> None:
        """Test case for device_type2_get_all_volume_collections

        Get all volume-collections details by Nimble / Alletra 6K
        """
        pass

    def test_device_type2_get_snapshot_collections_by_id(self) -> None:
        """Test case for device_type2_get_snapshot_collections_by_id

        Get details of snapshot collection of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId} by {snapshotId}
        """
        pass

    def test_device_type2_get_snapshots_by_volume_collection_id(self) -> None:
        """Test case for device_type2_get_snapshots_by_volume_collection_id

        Get all snapshot collections' details of Nimble / Alletra 6K Volume collection identified by {volumeCollectionId}
        """
        pass

    def test_device_type2_get_volume_collection_by_id(self) -> None:
        """Test case for device_type2_get_volume_collection_by_id

        Get details of Nimble / Alletra 6K volume-collections identified by {volumeCollectionId}
        """
        pass

    def test_device_type2_promote_action_on_volume_collection(self) -> None:
        """Test case for device_type2_promote_action_on_volume_collection

        Perform promote action Nimble / Alletra 6K on a volume collection identified by {volumeCollectionId} in system identified by {systemId}
        """
        pass

    def test_device_type2_remove_snap_shot_collection(self) -> None:
        """Test case for device_type2_remove_snap_shot_collection

        Remove multiple snapshot collections identified by {volumeCollectionId} from Nimble / Alletra 6K
        """
        pass

    def test_device_type2_remove_volume_collection_by_id(self) -> None:
        """Test case for device_type2_remove_volume_collection_by_id

        Remove Volume-collection identified by {volumeCollectionId} from Nimble / Alletra 6K
        """
        pass

    def test_device_type2_remove_volumes_from_volume_collection(self) -> None:
        """Test case for device_type2_remove_volumes_from_volume_collection

        Remove volumes from Nimble / Alletra 6K volumes collection in system identified by {systemId}
        """
        pass

    def test_device_type2_volume_collection_create(self) -> None:
        """Test case for device_type2_volume_collection_create

        Create Nimble / Alletra 6K volume collection in system identified by {systemId}
        """
        pass

    def test_device_type4_create_protection_policy(self) -> None:
        """Test case for device_type4_create_protection_policy

        Add protection policy on application set identified by {id} for a storage system HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_edit_protection_policies(self) -> None:
        """Test case for device_type4_edit_protection_policies

        Edit protection policy on application set identified by {id} for a storage system HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_edit_proximity_settings(self) -> None:
        """Test case for device_type4_edit_proximity_settings

        Change proximity settings of hosts where volume sets are exported identified by {id} and {systemId} from HPE Alletra Storage MP
        """
        pass

    def test_device_type4_fix_protection_policy(self) -> None:
        """Test case for device_type4_fix_protection_policy

        Fix protection policy configuration on application set identified by {id} for a storage system HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_get_protection_policies(self) -> None:
        """Test case for device_type4_get_protection_policies

        Get details of protection policies configured on application set identified by {id} created on HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_get_proximity_settings(self) -> None:
        """Test case for device_type4_get_proximity_settings

        Get hosts and proximity details identified by application set {id} for HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_get_replication_partner_volumes_by_app_set_id(self) -> None:
        """Test case for device_type4_get_replication_partner_volumes_by_app_set_id

        Get volume details of replication partners identified by {appsetId} and {replicationPartnerId} for HPE Alletra Storage MP
        """
        pass

    def test_device_type4_get_replication_partners_by_app_set_id(self) -> None:
        """Test case for device_type4_get_replication_partners_by_app_set_id

        Get details of HPE Alletra Storage MP replication partners identified by {systemId} and {appsetId}
        """
        pass

    def test_device_type4_snapsets_get_by_id(self) -> None:
        """Test case for device_type4_snapsets_get_by_id

        Get details of snapsets identified by {snapsetId} for Applicationset identified by {appsetId} for HPE Alletra Storage MP
        """
        pass

    def test_device_type4_volume_set_capacity_statistics_get_by_id(self) -> None:
        """Test case for device_type4_volume_set_capacity_statistics_get_by_id

        Get capacity details for an applicationset identified by appsetUid
        """
        pass

    def test_device_type4_volume_set_export(self) -> None:
        """Test case for device_type4_volume_set_export

        Export applicationset identified by {appsetId} from HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_volume_set_snapshot_get_by_id(self) -> None:
        """Test case for device_type4_volume_set_snapshot_get_by_id

        Remove HPE Alletra Storage MP snapset in system identified by {snapsetId}
        """
        pass

    def test_device_type4_volume_set_snapshots_list(self) -> None:
        """Test case for device_type4_volume_set_snapshots_list

        Get snapshot details of volume sets identified by {id} for HPE Alletra Storage MP
        """
        pass

    def test_device_type4_volume_set_unexport(self) -> None:
        """Test case for device_type4_volume_set_unexport

        Unexport applicationset identified by {appsetId} from HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_volume_set_volumes_list(self) -> None:
        """Test case for device_type4_volume_set_volumes_list

        Get volumes for an applicationset identified by appsetUid
        """
        pass

    def test_device_type4_volume_sets_create(self) -> None:
        """Test case for device_type4_volume_sets_create

        Create Application Set for a storage system HPE Alletra Storage MP
        """
        pass

    def test_device_type4_volume_sets_delete_by_id(self) -> None:
        """Test case for device_type4_volume_sets_delete_by_id

        Remove applicationset identified by {id} from HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_volume_sets_edit_by_id(self) -> None:
        """Test case for device_type4_volume_sets_edit_by_id

        Edit applicationset identified by {id} from HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4_volume_sets_get_by_id(self) -> None:
        """Test case for device_type4_volume_sets_get_by_id

        Get applicationset details for an applicationset identified by appsetUid
        """
        pass

    def test_device_type4_volume_sets_list(self) -> None:
        """Test case for device_type4_volume_sets_list

        Get all applicationset details for HPE Alletra Storage MP
        """
        pass

    def test_device_type4_volume_sets_snapshot_create(self) -> None:
        """Test case for device_type4_volume_sets_snapshot_create

        Create snapshot for application set identified by {id}
        """
        pass

    def test_device_type4action_on_volume_sets(self) -> None:
        """Test case for device_type4action_on_volume_sets

        Actions on volume set identified by {id} and {systemId} from HPE Alletra Storage MP
        """
        pass

    def test_device_type4get_supported_protection_types(self) -> None:
        """Test case for device_type4get_supported_protection_types

        Get supported protection types for application set identified by {id} on storage system HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_device_type4remove_protection_policies(self) -> None:
        """Test case for device_type4remove_protection_policies

        Remove protection policy on application set identified by {id} for a storage system HPE Alletra Storage MP identified by {systemId}
        """
        pass

    def test_volumeset_get_by_id(self) -> None:
        """Test case for volumeset_get_by_id

        Get volume-set identified by id
        """
        pass

    def test_volumeset_get_byvolumeset_id(self) -> None:
        """Test case for volumeset_get_byvolumeset_id

        Get volumes identified by volume set id
        """
        pass

    def test_volumeset_list(self) -> None:
        """Test case for volumeset_list

        Get all volume-sets
        """
        pass

    def test_volumeset_list_for_system_by_system_id(self) -> None:
        """Test case for volumeset_list_for_system_by_system_id

        Get all volume-sets for a systemId
        """
        pass

    def test_volumeset_system_get_by_id(self) -> None:
        """Test case for volumeset_system_get_by_id

        Get volume-set identified by id
        """
        pass


if __name__ == '__main__':
    unittest.main()
