# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_create_clone_volume_input import DeviceType4CreateCloneVolumeInput

class TestDeviceType4CreateCloneVolumeInput(unittest.TestCase):
    """DeviceType4CreateCloneVolumeInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4CreateCloneVolumeInput:
        """Test DeviceType4CreateCloneVolumeInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4CreateCloneVolumeInput`
        """
        model = DeviceType4CreateCloneVolumeInput()
        if include_optional:
            return DeviceType4CreateCloneVolumeInput(
                destination_volume = 'destinationVol1',
                offline_clone = dscc.models.device_type4offline_clone.DeviceType4offlineClone(
                    create_volume = dscc.models.device_type4create_volume.DeviceType4createVolume(
                        destination_cpg = 'SSD_r6', ), 
                    enable_resync = True, 
                    use_existing_volume = True, ),
                online = True,
                online_clone = dscc.models.device_type4online_clone.DeviceType4onlineClone(
                    auto_lun = True, 
                    destination_cpg = 'SSD_r6', 
                    host_group_id = 'fd3244ef7f1ab8bd16500c7a41bdf8f8', 
                    lun = 0, 
                    nvme_transport_type = 'TCP', ),
                priority = 'PRIORITYTYPE_MED'
            )
        else:
            return DeviceType4CreateCloneVolumeInput(
                destination_volume = 'destinationVol1',
        )
        """

    def testDeviceType4CreateCloneVolumeInput(self):
        """Test DeviceType4CreateCloneVolumeInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
