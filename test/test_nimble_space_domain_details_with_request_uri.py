# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_space_domain_details_with_request_uri import NimbleSpaceDomainDetailsWithRequestUri

class TestNimbleSpaceDomainDetailsWithRequestUri(unittest.TestCase):
    """NimbleSpaceDomainDetailsWithRequestUri unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleSpaceDomainDetailsWithRequestUri:
        """Test NimbleSpaceDomainDetailsWithRequestUri
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleSpaceDomainDetailsWithRequestUri`
        """
        model = NimbleSpaceDomainDetailsWithRequestUri()
        if include_optional:
            return NimbleSpaceDomainDetailsWithRequestUri(
                request_uri = 'api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/applications/00473102de2f5f39d8000000000000000000000001/capacity-stats',
                app_category_id = '360000000000000000000000000000000000000006',
                app_category_name = 'Virtual Server',
                block_size = 4096,
                clone_ratio = 1,
                compressed_usage_bytes = 878976,
                compression_ratio = 40.3879423328965,
                dedupe_ratio = 1,
                deduped = True,
                encrypted = False,
                id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                logical_dedupe_usage = 0,
                physical_dedupe_usage = 0,
                pool_id = '0a473102de2f5f39d8000000000000000000000001',
                pool_name = 'default',
                savings_clone = 0,
                savings_compression = 34621056,
                savings_dedupe = 0,
                snap_logical_usage = 0,
                uncompressed_usage_bytes = 35500032,
                usage = 878976,
                vol_logical_usage = 35500032,
                vol_mapped_usage = 35500032,
                associated_links = [{resourceUri=/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817, type=storage-systems}],
                common_resource_attributes = dscc.models.nimble_common_resource_attributes.NimbleCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/storage-pools/071491cb6652a03a6b000000000000000000000006',
                customer_id = 'string',
                deduped_volume_count = 0,
                generation = 0,
                perf_policy_names = [
                    dscc.models.nimble_perf_policy_summary.NimblePerfPolicySummary(
                        name = 'Hyper-V 2012 VM Storage', )
                    ],
                resource_uri = '/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817',
                sample_rate = 255,
                type = 'string',
                volume_count = 3,
                volumes = [
                    dscc.models.nimble_volume_summary.NimbleVolumeSummary(
                        agent_type = 'vvol', 
                        has_locked_snapshots = False, 
                        id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        name = 'Volume0', 
                        vol_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        vol_name = 'Volume0', 
                        volume_creator_id = '0600000000000004d3000000000044000000000002', 
                        volume_creator_name = 'AF-1234567', )
                    ]
            )
        else:
            return NimbleSpaceDomainDetailsWithRequestUri(
        )
        """

    def testNimbleSpaceDomainDetailsWithRequestUri(self):
        """Test NimbleSpaceDomainDetailsWithRequestUri"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
