# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.latency_annotations import LatencyAnnotations

class TestLatencyAnnotations(unittest.TestCase):
    """LatencyAnnotations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LatencyAnnotations:
        """Test LatencyAnnotations
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LatencyAnnotations`
        """
        model = LatencyAnnotations()
        if include_optional:
            return LatencyAnnotations(
                read = [
                    dscc.models.latency_annotation_metrics.latencyAnnotationMetrics(
                        latency_qtl90 = 6.21, 
                        max_range = '6ms-8ms', 
                        timestamp_ms = 1669880791, )
                    ],
                write = [
                    dscc.models.latency_annotation_metrics.latencyAnnotationMetrics(
                        latency_qtl90 = 6.21, 
                        max_range = '6ms-8ms', 
                        timestamp_ms = 1669880791, )
                    ]
            )
        else:
            return LatencyAnnotations(
        )
        """

    def testLatencyAnnotations(self):
        """Test LatencyAnnotations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
