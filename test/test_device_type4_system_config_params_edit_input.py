# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_system_config_params_edit_input import DeviceType4SystemConfigParamsEditInput

class TestDeviceType4SystemConfigParamsEditInput(unittest.TestCase):
    """DeviceType4SystemConfigParamsEditInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4SystemConfigParamsEditInput:
        """Test DeviceType4SystemConfigParamsEditInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4SystemConfigParamsEditInput`
        """
        model = DeviceType4SystemConfigParamsEditInput()
        if include_optional:
            return DeviceType4SystemConfigParamsEditInput(
                auth_mode = dscc.models.device_type4_system_config_params_edit_input_auth_mode.DeviceType4SystemConfigParamsEditInput_authMode(
                    authmode = 'ciphertext', ),
                date_time = '01/15/2020 10:00:00',
                installation_sites = dscc.models.device_type4_system_config_params_edit_input_installation_sites.DeviceType4SystemConfigParamsEditInput_installationSites(
                    city = 'Bangalore', 
                    company = 'Hewlett Packard Enterprise', 
                    country = 'India', 
                    postal_code = '560001', 
                    set_system_location = False, 
                    state = 'Karnataka', 
                    street_address = '7992 Woodland Street', 
                    support_provider = 'HPE', ),
                name = 'Array1',
                ntp_addresses = [
                    ''
                    ],
                remote_syslog_settings = dscc.models.device_type4_system_config_params_edit_input_remote_syslog_settings.DeviceType4SystemConfigParamsEditInput_remoteSyslogSettings(
                    remote_sys_log = 0, 
                    remote_sys_log_host = ["4.3.2.1:8080,1.2.3.4:8080"], 
                    remote_sys_log_security_host = ["5.6.7.8:8080,8.7.5.6:8080"], ),
                srinfo = dscc.models.device_type4_system_config_params_edit_input_srinfo.DeviceType4SystemConfigParamsEditInput_srinfo(
                    new_capacity_mi_b = 11000, ),
                support_contact = dscc.models.device_type4_contacts_edit_details.DeviceType4ContactsEditDetails(
                    company = 'HPE', 
                    company_code = 'HPE', 
                    country = 'US', 
                    fax = 'fax_id', 
                    first_name = 'john', 
                    id = '67d09515-8526-9b02-c0c4-c1f443a39402', 
                    include_svc_alerts = False, 
                    last_name = 'kevin', 
                    notification_severities = [0,1,2,3,4,5], 
                    preferred_language = 'en', 
                    primary_email = 'kevin.john@hpe.com', 
                    primary_phone = '98783456', 
                    receive_email = True, 
                    receive_grouped = True, 
                    secondary_email = 'winny.pooh@hpe.com', 
                    secondary_phone = '23456789', 
                    system_id = '7CE751P312', ),
                system_parameters = dscc.models.device_type4_system_config_params_edit_input_system_parameters.DeviceType4SystemConfigParamsEditInput_systemParameters(
                    overprov_ratio_limit = 2, 
                    overprov_ratio_warning = 1, ),
                timezone = 'Asia/Calcutta'
            )
        else:
            return DeviceType4SystemConfigParamsEditInput(
        )
        """

    def testDeviceType4SystemConfigParamsEditInput(self):
        """Test DeviceType4SystemConfigParamsEditInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
