# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_access_control_record_details import NimbleAccessControlRecordDetails

class TestNimbleAccessControlRecordDetails(unittest.TestCase):
    """NimbleAccessControlRecordDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleAccessControlRecordDetails:
        """Test NimbleAccessControlRecordDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleAccessControlRecordDetails`
        """
        model = NimbleAccessControlRecordDetails()
        if include_optional:
            return NimbleAccessControlRecordDetails(
                apply_to = 'volume',
                associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817","type":"storage-systems"}],
                common_resource_attributes = dscc.models.nimble_common_resource_attributes.NimbleCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'null',
                customer_id = 'string',
                generation = 0,
                pe_ids = [
                    '2a0df0fe6f7dc7bb16000000000000000000004817'
                    ],
                resource_uri = '/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817',
                snapluns = [
                    dscc.models.nimble_ns_snap_lun_info.NimbleNsSnapLunInfo(
                        id = '0a1c9973433673c3db000000000000000000000001', 
                        lun = 1, 
                        name = 'default', )
                    ],
                type = 'string',
                vol_agent_type = 'smis'
            )
        else:
            return NimbleAccessControlRecordDetails(
        )
        """

    def testNimbleAccessControlRecordDetails(self):
        """Test NimbleAccessControlRecordDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
