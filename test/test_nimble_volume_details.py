# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_volume_details import NimbleVolumeDetails

class TestNimbleVolumeDetails(unittest.TestCase):
    """NimbleVolumeDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleVolumeDetails:
        """Test NimbleVolumeDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleVolumeDetails`
        """
        model = NimbleVolumeDetails()
        if include_optional:
            return NimbleVolumeDetails(
                request_uri = 'api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817/volumes/2a0df0fe6f7dc7bb16000000000000000000004007',
                base_snap_id = '2a0df0fe6f7dc7bb16000000000000000000004017',
                base_snap_name = 'snp1',
                clone = False,
                dest_pool_id = '0a00000000000004d3000000000000000000000001',
                dest_pool_name = 'myobject-5',
                folder_id = '1234123412341234123412341234123412341234cd',
                folder_name = 'myobject-5',
                id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                name = 'volume1',
                online = True,
                owned_by_group = 'g1a1',
                owned_by_group_id = '2a0df0fe6f7dc7bb16000000000000000000004007',
                parent_vol_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                parent_vol_name = '1234123412341234abcdacbdacbdacbd',
                perfpolicy_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                perfpolicy_name = 'default',
                pool_id = '0a00000000000004d3000000000000000000000001',
                pool_name = 'default',
                read_only = False,
                replication_role = 'no_replication',
                secondary_serial_number = '1234123412341234abcdacbdacbdacbd',
                serial_number = '5596fd1da1c87b8d6c9ce900d3040000',
                size = 1024,
                target_name = 'iqn.2007-11.com.storage:vol0.762157726640911-v00000000000004d3.00000005.000004d3',
                volcoll_id = '1234123412341234123412341234123412341234cd',
                volcoll_name = 'myobject-5',
                access_control_records = [
                    dscc.models.access_control_record.AccessControlRecord(
                        access_protocol = 'volume', 
                        acl_id = '2a0df0fe6f7dc7bb16000000000000000000004818', 
                        apply_to = 'volume', 
                        chap_user_id = '0100000000000004d3000000000000000000000001', 
                        chap_user_name = '0100000000000004d3000000000000000000000001', 
                        id = '2a0df0fe6f7dc7bb16000000000000000000004818', 
                        initiator_group_id = '2a0df0fe6f7dc7bb16000000000000000000004818', 
                        initiator_group_name = 'h1a1', 
                        lun = 0, 
                        pe_id = '0100000000000004d3000000000000000000000001', 
                        pe_lun = 0, 
                        pe_name = 'peName', 
                        snap_id = '2200000000000004d3000000000000000000000007', 
                        snap_name = 'snap1', 
                        snapluns = [
                            dscc.models.snapshot_lun_info.SnapshotLunInfo(
                                id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                                lun = 0, 
                                name = 'snap1', )
                            ], 
                        vol_id = '0100000000000004d3000000000000000000000007', 
                        vol_name = 'vol1', )
                    ],
                agent_type = 'none',
                app_category = 'Other',
                app_uuid = 'rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18',
                associated_links = [{resourceUri=/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817, type=storage-systems}],
                block_size = 4096,
                cache_needed_for_pin = 104857600,
                cache_pinned = False,
                cache_policy = 'normal',
                caching_enabled = True,
                cksum_last_verified = 1598952427,
                common_resource_attributes = dscc.models.nimble_common_resource_attributes.NimbleCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'data-ops-manager/storage-systems/device-type2/001491cb6652a03a6b000000000000000000000001/volumes/071491cb6652a03a6b000000000000000000000006',
                content_repl_errors_found = False,
                creation_time = 1598951404,
                customer_id = 'string',
                dedupe_enabled = True,
                description = '99.9999% availability',
                encryption_cipher = 'none',
                force = False,
                full_name = 'default:/volume1',
                generation = 0,
                has_locked_snapshots = False,
                inherit_acl = False,
                is_mfa_protected = True,
                iscsi_target_scope = 'group',
                last_content_snap_br_cg_uid = 0,
                last_content_snap_br_gid = 0,
                last_content_snap_id = 0,
                last_modified = 1598952427,
                last_snap = dscc.models.snap_summary.SnapSummary(
                    snap_creation_time = 1598952427, 
                    snap_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                    snap_name = 'snap1', ),
                limit = 100,
                limit_iops = -1,
                limit_mbps = -1,
                metadata = [
                    dscc.models.key_value.KeyValue(
                        key = 'key1', 
                        value = 'value1', )
                    ],
                move_aborting = False,
                move_bytes_migrated = 0,
                move_bytes_remaining = 0,
                move_est_compl_time = 0,
                move_start_time = 0,
                multi_initiator = False,
                needs_content_repl = False,
                num_snaps = 28,
                offline_reason = 'user',
                online_snaps = [
                    dscc.models.snapshot_from_volume.SnapshotFromVolume(
                        id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        name = 'snap1', 
                        snap_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        snap_name = 'snap1', )
                    ],
                perfpolicy_creator_id = '0600000000000004d3000000000044000000000002',
                perfpolicy_creator_name = 'AF-123456',
                pinned_cache_size = 0,
                pre_filter = 'exampleFilter',
                previously_deduped = True,
                projected_num_snaps = 0,
                protection_type = 'local',
                reserve = 0,
                resource_uri = '/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817',
                search_name = 'volume1',
                snap_reserve = 0,
                snap_usage_compressed_bytes = 0,
                snap_usage_populated_bytes = 0,
                snap_usage_uncompressed_bytes = 0,
                snap_warn_level = 0,
                space_usage_level = 'normal',
                srep_last_sync = 1598952427,
                srep_resync_percent = 0,
                thinly_provisioned = True,
                total_usage_bytes = 0,
                type = 'string',
                upstream_cache_pinned = False,
                usage_valid = True,
                vol_state = 'online',
                vol_usage_compressed_bytes = 0,
                vol_usage_mapped_bytes = 0,
                vol_usage_uncompressed_bytes = 0,
                volcoll_creator_id = '0600000000000004d3000000000044000000000002',
                volcoll_creator_name = 'AF-123456',
                volume_creator_id = '0600000000000004d3000000000044000000000002',
                volume_creator_name = 'AF-1234567',
                vpd_ieee0 = 'bea16133315c83ab6c9ce90098b0ea001',
                vpd_ieee1 = '6c9ce90098b0ea001',
                vpd_t10 = 'Nimble bea16133315c83ab6c9ce90098b0ea001',
                warn_level = 80,
                volume_export_details = dscc.models.nimble_volume_export_details.NimbleVolumeExportDetails(
                    host_groups = [
                        dscc.models.nimble_host_group_detail.NimbleHostGroupDetail(
                            hosts = [
                                dscc.models.nimble_host_summary_details.NimbleHostSummaryDetails(
                                    access_protocol = 'fc', 
                                    acr_id = '2a0df0fe6f7dc7bb16000000000000000000004009', 
                                    apply_to = 'volume', 
                                    chap_user_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                                    chap_user_name = 'myobject-5', 
                                    fc_initiators = [
                                        dscc.models.fc_initiator_list.FCInitiatorList(
                                            alias = 'my_initiator-4', 
                                            id = '0d4323bdd90b39c3a7000000000000000000000012', 
                                            wwpn = 'af:32:f1:20:bc:ba:43:1a', )
                                        ], 
                                    fc_target_ports = [
                                        dscc.models.fc_port_list.FCPortList(
                                            name = 'fc3b.1', )
                                        ], 
                                    host_type = '', 
                                    id = '0d4323bdd90b39c3a7000000000000000000000012', 
                                    initiator_group_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                                    initiator_group_name = 'host1', 
                                    iscsi_initiators = [
                                        dscc.models.iscsi_initiator_list.IscsiInitiatorList(
                                            id = '0d4323bdd90b39c3a7000000000000000000000012', 
                                            ip_address = 'iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579', 
                                            iqn = 'iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579', 
                                            label = 'myobject-5', )
                                        ], 
                                    lun = 8, 
                                    name = 'hostgrp1', 
                                    num_connections = 8, 
                                    sc_host_id = '60f1a749a5bd4f0bb0644c9220eef7ce', 
                                    snap_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                                    user_created = False, )
                                ], 
                            sc_host_group_id = '60f1a749a5bd4f0bb0644c9220eef7ce', 
                            sc_host_group_name = 'hostgrp1', 
                            user_created = False, )
                        ], )
            )
        else:
            return NimbleVolumeDetails(
        )
        """

    def testNimbleVolumeDetails(self):
        """Test NimbleVolumeDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
