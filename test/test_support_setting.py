# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.support_setting import SupportSetting

class TestSupportSetting(unittest.TestCase):
    """SupportSetting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupportSetting:
        """Test SupportSetting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupportSetting`
        """
        model = SupportSetting()
        if include_optional:
            return SupportSetting(
                associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type1/{uid}","type":"systems"}],
                common_resource_attributes = dscc.models.primera_common_resource_attributes.primeraCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                connect_to_hpe = 'disabled',
                console_uri = 'data-ops-manager/storage-systems/device-type1/SGH014XGSP/settings/system-settings',
                customer_id = 'fc5f41652a53497e88cdcebc715cc1az',
                email_notifications = 'enabled',
                enterprise_server_url = 'server.com/collect',
                generation = 1627540915530,
                id = '7CE726P1VX',
                mini_insplore_enabled = 'disabled',
                rap_forwarding = 'enabled',
                remote_access = 'ENABLE_NONROOT',
                request_uri = '/api/v1/storage-systems/device-type1/7CE751P312/supportsettings',
                resource_uri = '/api/v1/storage-systems/device-type1/7CE751P312/supportsettings',
                rts_enabled = 'disabled',
                type = 'support-settings'
            )
        else:
            return SupportSetting(
        )
        """

    def testSupportSetting(self):
        """Test SupportSetting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
