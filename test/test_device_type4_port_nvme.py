# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_port_nvme import DeviceType4PortNVMe

class TestDeviceType4PortNVMe(unittest.TestCase):
    """DeviceType4PortNVMe unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4PortNVMe:
        """Test DeviceType4PortNVMe
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4PortNVMe`
        """
        model = DeviceType4PortNVMe()
        if include_optional:
            return DeviceType4PortNVMe(
                delimited_mac_address = '',
                eth = '',
                gateway_address = '',
                gateway_address_v6 = 'FE80::1',
                ip_address = '',
                ip_address_v6 = '2001:db8:abcd:12:ffff:ffff:ffff:ff16',
                mac_address = '',
                mode = '',
                mtu = '',
                nqn = '',
                pcidev = '',
                prefix_length = 56,
                prefix_length_v6 = 13,
                protocol = '',
                rate = '',
                state = '',
                vlan_count = 56,
                vlans = [
                    dscc.models.device_type4_nvme_vlan.DeviceType4NVMeVLAN(
                        eth = '', 
                        gateway_address = '', 
                        gateway_address_v6 = 'FE80::1', 
                        ip_address = '', 
                        ip_address_v6 = '2001:db8:abcd:12:ffff:ffff:ffff:ff16', 
                        mtu = '', 
                        nqn = '', 
                        prefix_length = 56, 
                        prefix_length_v6 = 13, 
                        vlan_id = '', )
                    ]
            )
        else:
            return DeviceType4PortNVMe(
        )
        """

    def testDeviceType4PortNVMe(self):
        """Test DeviceType4PortNVMe"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
