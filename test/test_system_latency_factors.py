# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.system_latency_factors import SystemLatencyFactors

class TestSystemLatencyFactors(unittest.TestCase):
    """SystemLatencyFactors unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SystemLatencyFactors:
        """Test SystemLatencyFactors
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SystemLatencyFactors`
        """
        model = SystemLatencyFactors()
        if include_optional:
            return SystemLatencyFactors(
                customer_id = '',
                end_time = 1669880791,
                latency_bands = dscc.models.device_type4_system_latency_factors_latency_bands.DeviceType4SystemLatencyFactors_latencyBands(
                    read = [
                        dscc.models.device_type4_system_latency_factors_latency_bands_read_inner.DeviceType4SystemLatencyFactors_latencyBands_read_inner(
                            end_time = 1669880791, 
                            start_time = 1669880791, 
                            top_factors = [
                                ''
                                ], )
                        ], 
                    write = [
                        dscc.models.device_type4_system_latency_factors_latency_bands_write_inner.DeviceType4SystemLatencyFactors_latencyBands_write_inner(
                            end_time = 1669880791, 
                            start_time = 1669880791, )
                        ], ),
                start_time = 1669794391,
                system_factors_metrics = [
                    dscc.models.factor_data.factorData(
                        cpu_busy = 2.47, 
                        dack_ssd = 2.47, 
                        pd_ssd_avg_busy = 2.47, 
                        read_cache_miss = 2.47, 
                        timestamp = 1669880791, 
                        write_cache_miss = 2.47, )
                    ],
                system_id = ''
            )
        else:
            return SystemLatencyFactors(
        )
        """

    def testSystemLatencyFactors(self):
        """Test SystemLatencyFactors"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
