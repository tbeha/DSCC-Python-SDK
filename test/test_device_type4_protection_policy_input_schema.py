# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_protection_policy_input_schema import DeviceType4ProtectionPolicyInputSchema

class TestDeviceType4ProtectionPolicyInputSchema(unittest.TestCase):
    """DeviceType4ProtectionPolicyInputSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4ProtectionPolicyInputSchema:
        """Test DeviceType4ProtectionPolicyInputSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4ProtectionPolicyInputSchema`
        """
        model = DeviceType4ProtectionPolicyInputSchema()
        if include_optional:
            return DeviceType4ProtectionPolicyInputSchema(
                auto_recover = False,
                auto_synchronize = false,
                no_automatic_synchronization = False,
                over_period_alert = False,
                remote = dscc.models.device_type4_protection_policy_remote_input_schema.DeviceType4ProtectionPolicyRemoteInputSchema(
                    partner_id = 'afb4961e47212e5bc88dd35db5be5c83', 
                    partner_name = 'IP_target', 
                    replication_partner_snapshot_cpg = 'SSD_r6', 
                    replication_partner_user_cpg = 'SSD_r6', 
                    replication_type = 'sync', ),
                rpo_secs = 600,
                secondary_remote = dscc.models.device_type4_protection_policy_secondary_remote_input_schema.DeviceType4ProtectionPolicySecondaryRemoteInputSchema(
                    partner_id = 'afb4961e47212e5bc88dd35db5be5c83', 
                    partner_name = 'IP_target', 
                    replication_type = 'periodic', ),
                zero_rto_config = 'APP'
            )
        else:
            return DeviceType4ProtectionPolicyInputSchema(
                remote = dscc.models.device_type4_protection_policy_remote_input_schema.DeviceType4ProtectionPolicyRemoteInputSchema(
                    partner_id = 'afb4961e47212e5bc88dd35db5be5c83', 
                    partner_name = 'IP_target', 
                    replication_partner_snapshot_cpg = 'SSD_r6', 
                    replication_partner_user_cpg = 'SSD_r6', 
                    replication_type = 'sync', ),
        )
        """

    def testDeviceType4ProtectionPolicyInputSchema(self):
        """Test DeviceType4ProtectionPolicyInputSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
