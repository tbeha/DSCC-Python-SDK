# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_create_volumes_workflow_input import NimbleCreateVolumesWorkflowInput

class TestNimbleCreateVolumesWorkflowInput(unittest.TestCase):
    """NimbleCreateVolumesWorkflowInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleCreateVolumesWorkflowInput:
        """Test NimbleCreateVolumesWorkflowInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleCreateVolumesWorkflowInput`
        """
        model = NimbleCreateVolumesWorkflowInput()
        if include_optional:
            return NimbleCreateVolumesWorkflowInput(
                agent_type = 'none',
                app_uuid = 'rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18',
                count = 3,
                dedupe_enabled = False,
                downstream_partner = '<resource_name>',
                downstream_partner_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                folder_id = '1234123412341234123412341234123412341234cd',
                host_groups = [
                    dscc.models.nimble_host_group_details.NimbleHostGroupDetails(
                        host_group_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        lun = 100, )
                    ],
                limit = 100,
                limit_iops = -1,
                limit_mbps = -1,
                name = 'volume1',
                perfpolicy = dscc.models.custom_application_parameters.CustomApplicationParameters(
                    compression = True, 
                    deduplication = True, 
                    name = 'CUSTOM-LOG-SERVER', ),
                perfpolicy_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                pool_id = '0a00000000000004d3000000000000000000000001',
                protection_policy_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                protection_policy_schedules = [
                    dscc.models.nimble_create_volumes_workflow_input_protection_policy_schedules_inner.NimbleCreateVolumesWorkflowInput_protectionPolicySchedules_inner(
                        lock_period = 0, 
                        name = '<name>', 
                        start_time = '8:30', )
                    ],
                replication_start_time = 16384456,
                size = 16,
                suffix = 4,
                vol_col_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                vol_col_name = 'appset_1',
                warn_level = 80
            )
        else:
            return NimbleCreateVolumesWorkflowInput(
                count = 3,
                name = 'volume1',
                size = 16,
        )
        """

    def testNimbleCreateVolumesWorkflowInput(self):
        """Test NimbleCreateVolumesWorkflowInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
