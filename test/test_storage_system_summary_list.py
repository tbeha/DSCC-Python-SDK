# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.storage_system_summary_list import StorageSystemSummaryList

class TestStorageSystemSummaryList(unittest.TestCase):
    """StorageSystemSummaryList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageSystemSummaryList:
        """Test StorageSystemSummaryList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageSystemSummaryList`
        """
        model = StorageSystemSummaryList()
        if include_optional:
            return StorageSystemSummaryList(
                items = [
                    dscc.models.storage_system_detail_list.storageSystemDetailList(
                        array_list = [
                            dscc.models.nimble_array_summary.NimbleArraySummary(
                                model = 'CS3000', 
                                name = 'NimbleArray45', )
                            ], 
                        associated_links = [{"resourceUri":"/api/v1/storage-systems/7CE751P312/contollers","type":"controllers"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/shelves","type":"shelves"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/disks","type":"disks"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/storage-ports","type":"storage-ports"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/storage-devices-settings","type":"storage-devices-settings"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/storage-pools","type":"storage-pools"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/volume-sets","type":"volume-sets"},{"resourceUri":"/api/v1/storage-systems/7CE751P312/host-groups","type":"host-groups"}], 
                        callhome_status = 'ENABLED_NORMAL', 
                        collection_status = dscc.models.collection_status.collectionStatus(
                            config_status = dscc.models.collection_status_config_status.collectionStatus_configStatus(
                                status = 'NORMAL', ), 
                            metric_status = dscc.models.collection_status_config_status.collectionStatus_configStatus(), 
                            over_all_status = 'NORMAL', ), 
                        connection_status = 'CONNECTED', 
                        customer_id = 'fc5f41652a53497e88cdcebc715cc1cf', 
                        description = '', 
                        generation = 0, 
                        id = '7CE751P312', 
                        last_connected_time = 1600084190299, 
                        max_volume_deco_size_mib = '67108864', 
                        mgmt_ip = null, 
                        min_volume_deco_size_mib = '256', 
                        model = '', 
                        name = 'DeviceType1Billing', 
                        product_family = 'deviceType1', 
                        resource_uri = '/api/v1/storage-systems/2FF70002AC018D94', 
                        software_version = '', 
                        state = 'NORMAL', 
                        system_wwn = '2FF70002AC018D94', 
                        tier_type = 'STORAGE_TIER_UNKNOWN', 
                        type = 'string', 
                        up_since = 1600084190299, )
                    ],
                page_limit = 1,
                page_offset = 1,
                request_uri = '/api/v1/storage-systems/',
                total = 1
            )
        else:
            return StorageSystemSummaryList(
        )
        """

    def testStorageSystemSummaryList(self):
        """Test StorageSystemSummaryList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
