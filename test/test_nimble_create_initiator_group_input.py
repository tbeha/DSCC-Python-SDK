# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_create_initiator_group_input import NimbleCreateInitiatorGroupInput

class TestNimbleCreateInitiatorGroupInput(unittest.TestCase):
    """NimbleCreateInitiatorGroupInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleCreateInitiatorGroupInput:
        """Test NimbleCreateInitiatorGroupInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleCreateInitiatorGroupInput`
        """
        model = NimbleCreateInitiatorGroupInput()
        if include_optional:
            return NimbleCreateInitiatorGroupInput(
                access_protocol = 'iscsi',
                app_uuid = 'rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18',
                description = '99.9999% availability',
                fc_initiators = [
                    dscc.models.nimble_fc_initiator.NimbleFCInitiator(
                        alias = 'vegaalias', 
                        id = '0b1c9973433673c3db000000000000000000000001', 
                        initiator_id = '0b1c9973433673c3db000000000000000000000001', 
                        wwpn = '0b1c9973433673c3db000000000000000000000001', )
                    ],
                fc_tdz_ports = [
                    dscc.models.nimble_fc_tdz_ports.NimbleFCTdzPorts(
                        array_name = 'myobject-5', 
                        fc_name = 'myobject-5', )
                    ],
                host_type = 'myobject-5',
                iscsi_initiators = [
                    dscc.models.nimble_iscsi_initiator.NimbleISCSIInitiator(
                        id = '021c9973433673c3db000000000000000000000001', 
                        ip_address = 'xx.xxx.xx.xx', 
                        iqn = 'vegaiqn', 
                        label = 'vega', )
                    ],
                metadata = [
                    dscc.models.nimble_metadata.NimbleMetadata(
                        key = 'vega-key', 
                        value = 'vega-value', )
                    ],
                name = 'myobject-5',
                target_subnets = [
                    dscc.models.nimble_target_subnets.NimbleTargetSubnets(
                        id = '021c9973433673c3db000000000000000000000003', 
                        label = 'myobject-5', )
                    ]
            )
        else:
            return NimbleCreateInitiatorGroupInput(
                access_protocol = 'iscsi',
                name = 'myobject-5',
        )
        """

    def testNimbleCreateInitiatorGroupInput(self):
        """Test NimbleCreateInitiatorGroupInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
