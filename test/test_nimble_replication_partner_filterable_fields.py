# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_replication_partner_filterable_fields import NimbleReplicationPartnerFilterableFields

class TestNimbleReplicationPartnerFilterableFields(unittest.TestCase):
    """NimbleReplicationPartnerFilterableFields unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleReplicationPartnerFilterableFields:
        """Test NimbleReplicationPartnerFilterableFields
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleReplicationPartnerFilterableFields`
        """
        model = NimbleReplicationPartnerFilterableFields()
        if include_optional:
            return NimbleReplicationPartnerFilterableFields(
                array_serial = '',
                cfg_sync_status = '',
                creation_time = 3400,
                folder_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                folder_name = 'Folder_A',
                hostname = '10.103.204.194',
                id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                is_alive = True,
                name = 'parnter-A',
                partner_type = '',
                paused = True,
                pool_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                pool_name = 'default-pool',
                repl_hostname = '10.103.204.194',
                subnet_label = 'management',
                subnet_netmask = '255.255.255.0',
                subnet_network = '128.0.0.1',
                subnet_type = '',
                system_id = '0019dbd036e652bd91000000000000000000000001',
                version = -1234,
                volume_collection_list_count = 1234
            )
        else:
            return NimbleReplicationPartnerFilterableFields(
        )
        """

    def testNimbleReplicationPartnerFilterableFields(self):
        """Test NimbleReplicationPartnerFilterableFields"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
