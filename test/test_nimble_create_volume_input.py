# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_create_volume_input import NimbleCreateVolumeInput

class TestNimbleCreateVolumeInput(unittest.TestCase):
    """NimbleCreateVolumeInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleCreateVolumeInput:
        """Test NimbleCreateVolumeInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleCreateVolumeInput`
        """
        model = NimbleCreateVolumeInput()
        if include_optional:
            return NimbleCreateVolumeInput(
                agent_type = 'none',
                app_uuid = 'rfc4122.943f7dc1-5853-497c-b530-f689ccf1bf18',
                base_snap_id = '2a0df0fe6f7dc7bb16000000000000000000004017',
                block_size = 4096,
                cache_pinned = False,
                clone = False,
                dedupe_enabled = False,
                description = '99.9999% availability',
                dest_pool_id = '0a00000000000004d3000000000000000000000001',
                encryption_cipher = 'none',
                folder_id = '1234123412341234123412341234123412341234cd',
                limit = 100,
                limit_iops = -1,
                limit_mbps = -1,
                metadata = [
                    dscc.models.key_value.KeyValue(
                        key = 'key1', 
                        value = 'value1', )
                    ],
                multi_initiator = False,
                name = 'volume1',
                online = True,
                owned_by_group_id = '2a0df0fe6f7dc7bb16000000000000000000004007',
                perfpolicy_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                pool_id = '0a00000000000004d3000000000000000000000001',
                read_only = False,
                reserve = 0,
                size = 1024,
                snap_reserve = 0,
                snap_warn_level = 0,
                suffix = 4,
                warn_level = 80
            )
        else:
            return NimbleCreateVolumeInput(
                name = 'volume1',
        )
        """

    def testNimbleCreateVolumeInput(self):
        """Test NimbleCreateVolumeInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
