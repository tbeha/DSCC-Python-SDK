# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.replication_partners_summary_list import ReplicationPartnersSummaryList

class TestReplicationPartnersSummaryList(unittest.TestCase):
    """ReplicationPartnersSummaryList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReplicationPartnersSummaryList:
        """Test ReplicationPartnersSummaryList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReplicationPartnersSummaryList`
        """
        model = ReplicationPartnersSummaryList()
        if include_optional:
            return ReplicationPartnersSummaryList(
                items = [
                    dscc.models.replication_partner_list.ReplicationPartnerList(
                        common_resource_attributes = dscc.models.primera_common_resource_attributes.primeraCommonResourceAttributes(
                            cloud_state = 'CONNECTED', ), 
                        customer_id = 'fc5f41652a53497e88cdcebc715cc1cf', 
                        display_name = 'RCPartner1', 
                        domain = 'Domain1', 
                        dr_state = 'Normal', 
                        generation = 0, 
                        group_id = '0af26e4430948dd5c37bea1757107caf', 
                        group_last_sync_time = dscc.models.sync_time.SyncTime(
                            ms = 1552301131100, 
                            tz = 'UTC', ), 
                        group_name = 'testGroup', 
                        group_object_id = 11, 
                        id = '0af26e4430548dd5c37bea1757107caf', 
                        is_protection_policy_configured = True, 
                        is_remote_array_support_replication = True, 
                        is_source_array_support_replication = True, 
                        mode = 'Periodic', 
                        policies = dscc.models.device_type4_replication_partner_list_policies.DeviceType4ReplicationPartnerList_policies(
                            active_active = True, 
                            auto_failover = True, 
                            auto_recover = True, 
                            auto_synchronize = True, 
                            multi_target_peer_persistence = True, 
                            over_period_alert = True, 
                            path_management = True, ), 
                        protection_type = 'Remote', 
                        remote_role = 'Primary', 
                        remote_snp_cpg = 'FC_r1', 
                        remote_usr_cpg = 'FC_r1', 
                        remote_volume_set_name = 'volumeSet2', 
                        replication_traffic = 'Sending', 
                        resource_uri = '/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/9c3c4f29a82fd8d632ff379116fa0b8f/replication-partners/0af26e4430548dd5c37bea1757107caf', 
                        role = 'Primary', 
                        role_reversed = True, 
                        snap_frequency_secs = -1, 
                        state = 'Started', 
                        sync_period = 0, 
                        system_id = '7CE816P0SR', 
                        system_name = 'sp2bh', 
                        system_wwn = '2FF70002AC020DA1', 
                        target_name = 'sp2bh', 
                        type = 'replication-partner', 
                        volume_count = 1, )
                    ],
                page_limit = 1,
                page_offset = 1,
                request_uri = '/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/0af26e4430948dd5c37bea1757107caf/replication-partners',
                total = 1
            )
        else:
            return ReplicationPartnersSummaryList(
        )
        """

    def testReplicationPartnersSummaryList(self):
        """Test ReplicationPartnersSummaryList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
