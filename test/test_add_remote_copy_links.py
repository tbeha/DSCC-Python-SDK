# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.add_remote_copy_links import AddRemoteCopyLinks

class TestAddRemoteCopyLinks(unittest.TestCase):
    """AddRemoteCopyLinks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddRemoteCopyLinks:
        """Test AddRemoteCopyLinks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddRemoteCopyLinks`
        """
        model = AddRemoteCopyLinks()
        if include_optional:
            return AddRemoteCopyLinks(
                replication_partner_system_id = '7CE816P0SR',
                source = [
                    dscc.models.create_remote_copy_link_input.CreateRemoteCopyLinkInput(
                        address = '10.100.65.128', 
                        port_pos = dscc.models.create_remote_copy_link_input_port_pos.CreateRemoteCopyLinkInput_portPos(
                            node = 0, 
                            port = 3, 
                            slot = 1, ), 
                        target_name = 'Sample_RCTarget', 
                        type = 1, )
                    ],
                target = [
                    dscc.models.create_remote_copy_link_input.CreateRemoteCopyLinkInput(
                        address = '10.100.65.128', 
                        port_pos = dscc.models.create_remote_copy_link_input_port_pos.CreateRemoteCopyLinkInput_portPos(
                            node = 0, 
                            port = 3, 
                            slot = 1, ), 
                        target_name = 'Sample_RCTarget', 
                        type = 1, )
                    ]
            )
        else:
            return AddRemoteCopyLinks(
                replication_partner_system_id = '7CE816P0SR',
                source = [
                    dscc.models.create_remote_copy_link_input.CreateRemoteCopyLinkInput(
                        address = '10.100.65.128', 
                        port_pos = dscc.models.create_remote_copy_link_input_port_pos.CreateRemoteCopyLinkInput_portPos(
                            node = 0, 
                            port = 3, 
                            slot = 1, ), 
                        target_name = 'Sample_RCTarget', 
                        type = 1, )
                    ],
                target = [
                    dscc.models.create_remote_copy_link_input.CreateRemoteCopyLinkInput(
                        address = '10.100.65.128', 
                        port_pos = dscc.models.create_remote_copy_link_input_port_pos.CreateRemoteCopyLinkInput_portPos(
                            node = 0, 
                            port = 3, 
                            slot = 1, ), 
                        target_name = 'Sample_RCTarget', 
                        type = 1, )
                    ],
        )
        """

    def testAddRemoteCopyLinks(self):
        """Test AddRemoteCopyLinks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
