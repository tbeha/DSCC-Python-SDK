# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4v_volsc_details import DeviceType4vVolscDetails

class TestDeviceType4vVolscDetails(unittest.TestCase):
    """DeviceType4vVolscDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4vVolscDetails:
        """Test DeviceType4vVolscDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4vVolscDetails`
        """
        model = DeviceType4vVolscDetails()
        if include_optional:
            return DeviceType4vVolscDetails(
                associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type4","type":"systems"}],
                auto_dissmissed = 3,
                comment = 'v1 is a storage container',
                common_resource_attributes = dscc.models.common_resource_attributes.commonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'data-ops-manager/storage-systems/device-type4/SGH014XGSP/settings/system-settings',
                creation_time = dscc.models.device_type4v_volsc_details_creation_time.DeviceType4vVolscDetails_creationTime(
                    ms = 56, 
                    tz = '', ),
                customer_id = 'fafafaefu987823hfa',
                display_name = 'Storage Container',
                domain = 'Domain',
                generation = 1627538867363,
                growth_limit_mi_b = 12,
                growth_size_mi_b = 123,
                growth_warn_mi_b = 46,
                host_groups = [
                    dscc.models.host_group_details.hostGroupDetails(
                        hosts = [
                            dscc.models.host_details.hostDetails(
                                id = 'Uid', 
                                name = 'Name', )
                            ], 
                        id = 'Uid', 
                        name = 'Name', )
                    ],
                host_list = [
                    ''
                    ],
                hosts = [
                    dscc.models.host_details.hostDetails(
                        id = 'Uid', 
                        name = 'Name', )
                    ],
                id = 'fc5f41652a53497e88cdcebc715cc1xz',
                in_use_mi_b = 243,
                name = 'vvolsc1',
                num_of_vms = 3,
                num_of_vvols = 6,
                pevvs = [
                    ''
                    ],
                provisioned_mi_b = 23,
                resource_uri = '/v1/storage-systems/device-type4/7CE751P312/vvolscs/9c3c4f29a82fd8d632ff379116fa0b8f',
                sc_id = 'fc5f41652a53497e88cdcebc715cc1xz',
                sc_uuid = 'fc5f41652a53497e88cdcebc715cc1xz',
                sc_id = 56,
                sc_type = 'SCSI',
                system_id = '7CE751P312',
                system_wwn = '4UW001500',
                total_mi_b = 458,
                type = 'storage Container',
                uri = '/api/v1/storage-systems/device-type4/7CE751P312/network-services/vvolscs'
            )
        else:
            return DeviceType4vVolscDetails(
        )
        """

    def testDeviceType4vVolscDetails(self):
        """Test DeviceType4vVolscDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
