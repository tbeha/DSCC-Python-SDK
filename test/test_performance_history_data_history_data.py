# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.performance_history_data_history_data import PerformanceHistoryDataHistoryData

class TestPerformanceHistoryDataHistoryData(unittest.TestCase):
    """PerformanceHistoryDataHistoryData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerformanceHistoryDataHistoryData:
        """Test PerformanceHistoryDataHistoryData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerformanceHistoryDataHistoryData`
        """
        model = PerformanceHistoryDataHistoryData()
        if include_optional:
            return PerformanceHistoryDataHistoryData(
                avgbusy_metrics_data_perct = [
                    dscc.models.metric_history_data_single_value.metricHistoryDataSingleValue(
                        chart_legend_id = 'VV_NAME-vvname1:HOST_NAME-host:LUN-lun', 
                        time_series_data = dscc.models.metric_data_value.metricDataValue(
                            items = [
                                dscc.models.metric_series_data_value.metricSeriesDataValue(
                                    name = 'appset1', 
                                    timestampms = 1605063600, 
                                    value = 46, )
                                ], 
                            total = 1, ), )
                    ],
                iops_metrics_data = [
                    dscc.models.metric_history_data.metricHistoryData(
                        chart_legend_id = 'VV_NAME-vvname1:HOST_NAME-host:LUN-lun', 
                        time_series_data = dscc.models.metric_read_write_data.metricReadWriteData(
                            items = [
                                dscc.models.metric_series_read_write_data.metricSeriesReadWriteData(
                                    name = 'appset1', 
                                    read_value = 46, 
                                    timestampms = 1605063600, 
                                    write_value = 23.76, )
                                ], 
                            total = 1, ), )
                    ],
                iosz_metrics_data_kbs = [
                    dscc.models.metric_history_data.metricHistoryData(
                        chart_legend_id = 'VV_NAME-vvname1:HOST_NAME-host:LUN-lun', 
                        time_series_data = dscc.models.metric_read_write_data.metricReadWriteData(
                            items = [
                                dscc.models.metric_series_read_write_data.metricSeriesReadWriteData(
                                    name = 'appset1', 
                                    read_value = 46, 
                                    timestampms = 1605063600, 
                                    write_value = 23.76, )
                                ], 
                            total = 1, ), )
                    ],
                latency_metrics_data_ms = [
                    dscc.models.metric_history_data.metricHistoryData(
                        chart_legend_id = 'VV_NAME-vvname1:HOST_NAME-host:LUN-lun', 
                        time_series_data = dscc.models.metric_read_write_data.metricReadWriteData(
                            items = [
                                dscc.models.metric_series_read_write_data.metricSeriesReadWriteData(
                                    name = 'appset1', 
                                    read_value = 46, 
                                    timestampms = 1605063600, 
                                    write_value = 23.76, )
                                ], 
                            total = 1, ), )
                    ],
                qlen_metrics_data = [
                    dscc.models.metric_history_data_single_value.metricHistoryDataSingleValue(
                        chart_legend_id = 'VV_NAME-vvname1:HOST_NAME-host:LUN-lun', 
                        time_series_data = dscc.models.metric_data_value.metricDataValue(
                            items = [
                                dscc.models.metric_series_data_value.metricSeriesDataValue(
                                    name = 'appset1', 
                                    timestampms = 1605063600, 
                                    value = 46, )
                                ], 
                            total = 1, ), )
                    ],
                throughput_metrics_data_kbps = [
                    dscc.models.metric_history_data.metricHistoryData(
                        chart_legend_id = 'VV_NAME-vvname1:HOST_NAME-host:LUN-lun', 
                        time_series_data = dscc.models.metric_read_write_data.metricReadWriteData(
                            items = [
                                dscc.models.metric_series_read_write_data.metricSeriesReadWriteData(
                                    name = 'appset1', 
                                    read_value = 46, 
                                    timestampms = 1605063600, 
                                    write_value = 23.76, )
                                ], 
                            total = 1, ), )
                    ]
            )
        else:
            return PerformanceHistoryDataHistoryData(
        )
        """

    def testPerformanceHistoryDataHistoryData(self):
        """Test PerformanceHistoryDataHistoryData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
