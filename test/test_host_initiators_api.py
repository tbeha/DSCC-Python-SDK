# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.api.host_initiators_api import HostInitiatorsApi


class TestHostInitiatorsApi(unittest.TestCase):
    """HostInitiatorsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = HostInitiatorsApi()

    def tearDown(self) -> None:
        pass

    def test_bulk_merge_host(self) -> None:
        """Test case for bulk_merge_host

        Bulk merge hosts into user created host
        """
        pass

    def test_device_type2_get_all_initiators(self) -> None:
        """Test case for device_type2_get_all_initiators

        Get all nimble initiators details by Nimble / Alletra 6K
        """
        pass

    def test_device_type2_get_initiators_by_id(self) -> None:
        """Test case for device_type2_get_initiators_by_id

        Get details of Nimble / Alletra 6K Nimble Initiators identified by {hostInitiatorId}
        """
        pass

    def test_device_type2_initiators_create(self) -> None:
        """Test case for device_type2_initiators_create

        Create Nimble / Alletra 6K nimble initiator in system identified by {systemId}
        """
        pass

    def test_device_type2_remove_initiators_by_id(self) -> None:
        """Test case for device_type2_remove_initiators_by_id

        Remove Nimble Initiator identified by {hostInitiatorId} from Nimble / Alletra 6K
        """
        pass

    def test_find_bulk_merge_candidates_for_hosts(self) -> None:
        """Test case for find_bulk_merge_candidates_for_hosts

        Get the list of hosts which have duplicates
        """
        pass

    def test_get_host_chap_by_id(self) -> None:
        """Test case for get_host_chap_by_id

        Get Host CHAP details by {hostId}
        """
        pass

    def test_host_create(self) -> None:
        """Test case for host_create

        Create a host
        """
        pass

    def test_host_delete(self) -> None:
        """Test case for host_delete

        Delete a host by {hostId}
        """
        pass

    def test_host_get_by_id(self) -> None:
        """Test case for host_get_by_id

        Get the host details by {hostId}
        """
        pass

    def test_host_initiator_create(self) -> None:
        """Test case for host_initiator_create

        Create initiator
        """
        pass

    def test_host_initiator_delete(self) -> None:
        """Test case for host_initiator_delete

        Delete initiator by {initiatorId}
        """
        pass

    def test_host_initiator_get_by_id(self) -> None:
        """Test case for host_initiator_get_by_id

        Get the initiator details by {initiatorId}
        """
        pass

    def test_host_initiator_list(self) -> None:
        """Test case for host_initiator_list

        Get the list of initiators
        """
        pass

    def test_host_list(self) -> None:
        """Test case for host_list

        Get the list of hosts
        """
        pass

    def test_host_update_by_id(self) -> None:
        """Test case for host_update_by_id

        Update Host by {hostId}
        """
        pass

    def test_host_volume_performance_history_get(self) -> None:
        """Test case for host_volume_performance_history_get

        Get the volume performance history data associated with a host identified by {uid}
        """
        pass

    def test_host_volumes_get(self) -> None:
        """Test case for host_volumes_get

        Get details of volumes associated with a host identified by {uid}
        """
        pass

    def test_merge_host(self) -> None:
        """Test case for merge_host

        Merge hosts into user created host
        """
        pass

    def test_update_host_chap_by_id(self) -> None:
        """Test case for update_host_chap_by_id

        Update Host CHAP by {hostId}
        """
        pass


if __name__ == '__main__':
    unittest.main()
