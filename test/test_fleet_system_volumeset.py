# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.fleet_system_volumeset import FleetSystemVolumeset

class TestFleetSystemVolumeset(unittest.TestCase):
    """FleetSystemVolumeset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FleetSystemVolumeset:
        """Test FleetSystemVolumeset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FleetSystemVolumeset`
        """
        model = FleetSystemVolumeset()
        if include_optional:
            return FleetSystemVolumeset(
                app_type = 'Oracle Database',
                associated_links = [
                    dscc.models.associated_links_inner.AssociatedLinks_inner(
                        resource_uri = '', 
                        type = '', )
                    ],
                common_resource_attributes = dscc.models.common_resource_attributesfleet.commonResourceAttributesfleet(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'data-ops-manager/storage-systems/device-type1/SGH014XGSP',
                customer_id = 'string',
                generation = 0,
                id = '4c74ec5c-ecec-4483-9506-3fb5dc45b5d0',
                name = 'snap11',
                product_family = 'deviceType1',
                request_uri = '/api/v1/storage-systems/device-type1/7CE751P312/applicationsets/14dbcb4be4836ff8f012a6d0118ba83a',
                resource_uri = '/v1/storage-systems/volume-sets',
                system_id = '7CE751P312',
                type = 'string',
                volumes_count = 5
            )
        else:
            return FleetSystemVolumeset(
        )
        """

    def testFleetSystemVolumeset(self):
        """Test FleetSystemVolumeset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
