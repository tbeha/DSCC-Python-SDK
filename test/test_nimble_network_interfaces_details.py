# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_network_interfaces_details import NimbleNetworkInterfacesDetails

class TestNimbleNetworkInterfacesDetails(unittest.TestCase):
    """NimbleNetworkInterfacesDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleNetworkInterfacesDetails:
        """Test NimbleNetworkInterfacesDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleNetworkInterfacesDetails`
        """
        model = NimbleNetworkInterfacesDetails()
        if include_optional:
            return NimbleNetworkInterfacesDetails(
                array_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                array_name_or_serial = 'myobject-5',
                associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817","type":"storage-systems"}],
                common_resource_attributes = dscc.models.nimble_common_resource_attributes.NimbleCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'null',
                controller_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                controller_name = 'myobject-5',
                customer_id = 'string',
                generation = 0,
                id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                ip_list = [
                    dscc.models.nimble_network_ip.NimbleNetworkIP(
                        ip = '127.0.0.1', 
                        vlan_id = 1, )
                    ],
                is_present = True,
                link_speed = 'link_speed_1000M',
                link_status = 'link_status_up',
                mac = '11:33:55:77:99:BB',
                max_link_speed = 'link_speed_1000M',
                mtu = 1234,
                name = 'myobject-5',
                nic_type = 'nic_type_tp',
                port = 1234,
                resource_uri = '/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817',
                slot = 1234,
                type = 'string'
            )
        else:
            return NimbleNetworkInterfacesDetails(
        )
        """

    def testNimbleNetworkInterfacesDetails(self):
        """Test NimbleNetworkInterfacesDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
