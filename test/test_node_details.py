# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.node_details import NodeDetails

class TestNodeDetails(unittest.TestCase):
    """NodeDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NodeDetails:
        """Test NodeDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NodeDetails`
        """
        model = NodeDetails()
        if include_optional:
            return NodeDetails(
                node_id = 0,
                associated_links = [{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF","type":"systems"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cpus","type":"node-cpus"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-cards","type":"node-cards"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-drives","type":"node-drives"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/0/node-powers","type":"node-powers"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mcus","type":"node-mcus"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5/node-mems","type":"node-mems"},{"resourceUri":"/v1/storage-systems/device-type1/2FF70002AC01F0FF/nodes/0/nodes-batteries","type":"nodes-batteries"}],
                bios_version = '6.1.18',
                cache_available_pct = 100,
                cache_enabled = 100,
                common_resource_attributes = dscc.models.primera_common_resource_attributes.primeraCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'data-ops-manager/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5',
                control_memory_mi_b = 208576,
                customer_id = 'string',
                data_memory_mi_b = 53248,
                displayname = 'Controller Node 0',
                domain = '',
                generation = 0,
                id = 'e9d353bf98fc1a6bdb90b824e3ca14b5',
                in_cluster = True,
                kernel_version = '4.2.1',
                locate_enabled = False,
                manufacturing = dscc.models.manufacturing_single.manufacturingSingle(
                    assembly_rev = '002*', 
                    check_sum = '--', 
                    hpe_model_name = 'HPE 3PAR 600 2S Node', 
                    manufacturer = 'XYRATEX', 
                    model = '0974244-06', 
                    saleable_part_number = '0974244-06', 
                    saleable_serial_number = '4UW0002941', 
                    serial_number = 'PMW0974244G4T88', 
                    spare_part_number = 'P04031-001', ),
                master = True,
                name = '4UW0002941-0',
                online = True,
                request_uri = '/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5',
                resource_uri = '/v1/storage-systems/device-type1/2FF70002AC018D94/nodes/e9d353bf98fc1a6bdb90b824e3ca14b5',
                safe_to_remove = False,
                service_led = 'LED_UNKNOWN',
                state = dscc.models.state.State(
                    detailed = [
                        ''
                        ], 
                    overall = 'STATE_NORMAL', ),
                state_description = 'OK',
                system_id = '7CE751P312',
                system_led = 'LED_UNKNOWN',
                type = 'string',
                uptime = dscc.models.nodeuptime.nodeuptime(
                    ms = 123423423, 
                    tz = 'IST', )
            )
        else:
            return NodeDetails(
        )
        """

    def testNodeDetails(self):
        """Test NodeDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
