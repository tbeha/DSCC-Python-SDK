# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_create_volume_collection_input import NimbleCreateVolumeCollectionInput

class TestNimbleCreateVolumeCollectionInput(unittest.TestCase):
    """NimbleCreateVolumeCollectionInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleCreateVolumeCollectionInput:
        """Test NimbleCreateVolumeCollectionInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleCreateVolumeCollectionInput`
        """
        model = NimbleCreateVolumeCollectionInput()
        if include_optional:
            return NimbleCreateVolumeCollectionInput(
                agent_hostname = 'myobject-5',
                agent_username = 'myobject-5',
                app_cluster_name = 'myobject-5',
                app_id = 'inval',
                app_server = 'myobject-5',
                app_service_name = 'myobject-5',
                app_sync = 'vss',
                description = '99.9999% availability',
                is_standalone_volcoll = True,
                metadata = [
                    dscc.models.key_value.KeyValue(
                        key = 'key1', 
                        value = 'value1', )
                    ],
                name = 'myobject-5',
                prottmpl_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                replication_type = 'periodic_snapshot',
                vcenter_hostname = 'myobject-5',
                vcenter_username = 'administrator@vsphere.local',
                volume_list = [
                    ''
                    ]
            )
        else:
            return NimbleCreateVolumeCollectionInput(
                name = 'myobject-5',
        )
        """

    def testNimbleCreateVolumeCollectionInput(self):
        """Test NimbleCreateVolumeCollectionInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
