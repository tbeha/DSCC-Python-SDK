# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4vcenter_setting_detail_list import DeviceType4vcenterSettingDetailList

class TestDeviceType4vcenterSettingDetailList(unittest.TestCase):
    """DeviceType4vcenterSettingDetailList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4vcenterSettingDetailList:
        """Test DeviceType4vcenterSettingDetailList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4vcenterSettingDetailList`
        """
        model = DeviceType4vcenterSettingDetailList()
        if include_optional:
            return DeviceType4vcenterSettingDetailList(
                common_resource_attributes = dscc.models.common_resource_attributes.commonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                console_uri = 'data-ops-manager/storage-systems/device-type4/SGH014XGSP/settings/system-settings',
                customer_id = 'fc5f41652a53497e88cdcebc715cc1ce',
                description = 'sample vcenter description',
                friendly_cert = dscc.models.device_type4friendly_cert.DeviceType4friendlyCert(
                    valid_from = dscc.models.device_type4validity.DeviceType4validity(
                        ms = 1591601529000, 
                        tz = 'Local', ), 
                    valid_until = dscc.models.device_type4validity.DeviceType4validity(
                        ms = 1591601529000, 
                        tz = 'Local', ), 
                    issued_to = '15.213.64.88', 
                    issuer = 'CA', ),
                generation = 1627540916540,
                id = 'c0e4e72b-c9d3-54a4-312f-4ec0f8da498a',
                inetaddress = '18.218.214.244',
                name = 'sample_vc_name',
                port = 443,
                resource_uri = '/api/v1/storage-systems/device-type4/7CE809P009/vm-manager-settings/centerid123',
                status = dscc.models.device_type4vcenter_status.DeviceType4vcenterStatus(
                    default = 'Ok', 
                    key = 'VMPERF_FAILED', ),
                system_id = '7CE809P009',
                type = 'vm-manager-settings',
                username = 'SysAdmin@machine.local',
                vm_manager_type = 'hyperV'
            )
        else:
            return DeviceType4vcenterSettingDetailList(
        )
        """

    def testDeviceType4vcenterSettingDetailList(self):
        """Test DeviceType4vcenterSettingDetailList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
