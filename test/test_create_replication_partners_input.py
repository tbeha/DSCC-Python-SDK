# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.create_replication_partners_input import CreateReplicationPartnersInput

class TestCreateReplicationPartnersInput(unittest.TestCase):
    """CreateReplicationPartnersInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateReplicationPartnersInput:
        """Test CreateReplicationPartnersInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateReplicationPartnersInput`
        """
        model = CreateReplicationPartnersInput()
        if include_optional:
            return CreateReplicationPartnersInput(
                replication_partners = [
                    dscc.models.replication_partner_input.ReplicationPartnerInput(
                        replication_partner_system_id = '', 
                        source = dscc.models.create_remote_copy_target_input.CreateRemoteCopyTargetInput(
                            disabled = True, 
                            name = 'sample_RCtarget', 
                            node_wwn = '2FF70002AC020DA1', 
                            port_pos_and_link = [
                                dscc.models.port_pos_and_link_input.PortPosAndLinkInput(
                                    link = '10.100.65.128', 
                                    port_position = dscc.models.port_position_input.PortPositionInput(
                                        node = 0, 
                                        port = 3, 
                                        slot = 1, ), )
                                ], 
                            type = 1, ), 
                        target = dscc.models.create_remote_copy_target_input.CreateRemoteCopyTargetInput(
                            disabled = True, 
                            name = 'sample_RCtarget', 
                            node_wwn = '2FF70002AC020DA1', 
                            port_pos_and_link = [
                                dscc.models.port_pos_and_link_input.PortPosAndLinkInput(
                                    link = '10.100.65.128', 
                                    port_position = dscc.models.port_position_input.PortPositionInput(
                                        node = 0, 
                                        port = 3, 
                                        slot = 1, ), )
                                ], 
                            type = 1, ), )
                    ]
            )
        else:
            return CreateReplicationPartnersInput(
                replication_partners = [
                    dscc.models.replication_partner_input.ReplicationPartnerInput(
                        replication_partner_system_id = '', 
                        source = dscc.models.create_remote_copy_target_input.CreateRemoteCopyTargetInput(
                            disabled = True, 
                            name = 'sample_RCtarget', 
                            node_wwn = '2FF70002AC020DA1', 
                            port_pos_and_link = [
                                dscc.models.port_pos_and_link_input.PortPosAndLinkInput(
                                    link = '10.100.65.128', 
                                    port_position = dscc.models.port_position_input.PortPositionInput(
                                        node = 0, 
                                        port = 3, 
                                        slot = 1, ), )
                                ], 
                            type = 1, ), 
                        target = dscc.models.create_remote_copy_target_input.CreateRemoteCopyTargetInput(
                            disabled = True, 
                            name = 'sample_RCtarget', 
                            node_wwn = '2FF70002AC020DA1', 
                            port_pos_and_link = [
                                dscc.models.port_pos_and_link_input.PortPosAndLinkInput(
                                    link = '10.100.65.128', 
                                    port_position = dscc.models.port_position_input.PortPositionInput(
                                        node = 0, 
                                        port = 3, 
                                        slot = 1, ), )
                                ], 
                            type = 1, ), )
                    ],
        )
        """

    def testCreateReplicationPartnersInput(self):
        """Test CreateReplicationPartnersInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
