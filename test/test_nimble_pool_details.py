# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_pool_details import NimblePoolDetails

class TestNimblePoolDetails(unittest.TestCase):
    """NimblePoolDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimblePoolDetails:
        """Test NimblePoolDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimblePoolDetails`
        """
        model = NimblePoolDetails()
        if include_optional:
            return NimblePoolDetails(
                all_flash = True,
                array_count = 2,
                array_list = [
                    dscc.models.nimble_array_detail.NimbleArrayDetail(
                        evac_time = 0, 
                        evac_usage = 56, 
                        migrate = 'in', 
                        snap_usage_compressed_bytes = 56, 
                        usable_capacity = 56, 
                        usage = 56, 
                        usage_valid = True, 
                        vol_usage_compressed_bytes = 56, )
                    ],
                associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817","type":"storage-systems"}],
                cache_capacity = 256,
                capacity = 1024,
                clone_ratio = 9.18,
                common_resource_attributes = dscc.models.nimble_common_resource_attributes.NimbleCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                compression_ratio = 9.18,
                console_uri = 'null',
                creation_time = 343200,
                customer_id = 'string',
                data_reduction_ratio = 9.18,
                dedupe_all_volumes = False,
                dedupe_all_volumes_capable = False,
                dedupe_capable = True,
                dedupe_capacity_bytes = 10,
                dedupe_ratio = 9.18,
                dedupe_usage_bytes = 0,
                description = 'HA pool',
                folder_list = [
                    dscc.models.nimble_folder_summary.NimbleFolderSummary(
                        fqn = 'Folder0', 
                        id = '2a0df0fe6f7dc7bb16000000000000000000004817', )
                    ],
                free_space = 1024,
                full_name = 'pool0.0645689306120438',
                generation = 0,
                is_default = True,
                last_modified = 343200,
                pinnable_cache_capacity = 128,
                pinned_cache_capacity = 128,
                pinned_vol_list = [
                    dscc.models.nimble_pinned_volume_info.NimblePinnedVolumeInfo(
                        size_pinned_cache_bytes = 4817, )
                    ],
                reserve = 165432,
                resource_uri = '/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817',
                savings = 54,
                savings_clone = 64,
                savings_compression = 48,
                savings_data_reduction = 107,
                savings_dedupe = 58,
                savings_ratio = 9.18,
                savings_vol_thin_provisioning = 1073,
                search_name = 'pool0.0645689306120438',
                snap_count = 8,
                snapcoll_count = 0,
                type = 'string',
                unassigned_array_list = [
                    dscc.models.nimble_arr_summary.NimbleArrSummary(
                        array_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        array_name = 'Array1', 
                        id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        name = 'Array1', )
                    ],
                uncompressed_snap_usage_bytes = 165432,
                uncompressed_vol_usage_bytes = 165432,
                unused_reserve = 15,
                usage = 256,
                usage_valid = True,
                vol_count = 5,
                vol_list = [
                    dscc.models.nimble_volume_summary.NimbleVolumeSummary(
                        agent_type = 'vvol', 
                        has_locked_snapshots = False, 
                        id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        name = 'Volume0', 
                        vol_id = '2a0df0fe6f7dc7bb16000000000000000000004817', 
                        vol_name = 'Volume0', 
                        volume_creator_id = '0600000000000004d3000000000044000000000002', 
                        volume_creator_name = 'AF-1234567', )
                    ],
                vol_thin_provisioning_ratio = 9.18
            )
        else:
            return NimblePoolDetails(
        )
        """

    def testNimblePoolDetails(self):
        """Test NimblePoolDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
