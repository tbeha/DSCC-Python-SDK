# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_volume_performance_histogram import DeviceType4VolumePerformanceHistogram

class TestDeviceType4VolumePerformanceHistogram(unittest.TestCase):
    """DeviceType4VolumePerformanceHistogram unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4VolumePerformanceHistogram:
        """Test DeviceType4VolumePerformanceHistogram
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4VolumePerformanceHistogram`
        """
        model = DeviceType4VolumePerformanceHistogram()
        if include_optional:
            return DeviceType4VolumePerformanceHistogram(
                customer_id = '',
                end_time = 1669880791,
                request_uri = '/api/v1/storage-systems/device-type4/ABC239XFZ9/volumes/60002AC000000000000005B200029834/performance-histogram',
                size_histogram_data = dscc.models.size_histogram_data.sizeHistogramData(
                    aggs = dscc.models.aggregations.aggregations(
                        avg_percentages = dscc.models.avg_percentages.avgPercentages(
                            read = [
                                dscc.models.percentage_bucket_set_inner.percentageBucketSet_inner(
                                    name = '2K', 
                                    percentage = 20, )
                                ], 
                            write = [
                                dscc.models.percentage_bucket_set_inner.percentageBucketSet_inner(
                                    name = '2K', 
                                    percentage = 20, )
                                ], ), ), 
                    series_data = [
                        dscc.models.series_data_inner.seriesData_inner(
                            read_buckets = [
                                dscc.models.histogram_bucket_inner.histogramBucket_inner(
                                    name = '2K', 
                                    percentage = 20, 
                                    value = 1151, )
                                ], 
                            timestamp = 1669794420000, 
                            write_buckets = [
                                dscc.models.histogram_bucket_inner.histogramBucket_inner(
                                    name = '2K', 
                                    percentage = 20, 
                                    value = 1151, )
                                ], )
                        ], ),
                start_time = 1669794391
            )
        else:
            return DeviceType4VolumePerformanceHistogram(
        )
        """

    def testDeviceType4VolumePerformanceHistogram(self):
        """Test DeviceType4VolumePerformanceHistogram"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
