# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_health_status_details_with_request_uri import NimbleHealthStatusDetailsWithRequestUri

class TestNimbleHealthStatusDetailsWithRequestUri(unittest.TestCase):
    """NimbleHealthStatusDetailsWithRequestUri unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleHealthStatusDetailsWithRequestUri:
        """Test NimbleHealthStatusDetailsWithRequestUri
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleHealthStatusDetailsWithRequestUri`
        """
        model = NimbleHealthStatusDetailsWithRequestUri()
        if include_optional:
            return NimbleHealthStatusDetailsWithRequestUri(
                request_uri = 'api/v1/storage-systems/devicetype2/2a0df0fe6f7dc7bb16000000000000000000004817/health-status/2a0df0fe6f7dc7bb16000000000000000000004007',
                array_id = '1300000000000004d30000000000000001',
                context = 'all',
                ctrlr_id = '1300000000000004d30000000000000001',
                id = '1300000000000004d30000000000000001',
                scope = 'array',
                associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817","type":"storage-systems"}],
                common_resource_attributes = dscc.models.nimble_common_resource_attributes.NimbleCommonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                customer_id = 'string',
                element_result = dscc.models.nimble_hcf_result.NimbleHCFResult(
                    element_name = 'nimblevega', 
                    error_list = [
                        'error1'
                        ], 
                    messages = [
                        dscc.models.nimble_error_with_arguments.NimbleErrorWithArguments(
                            code = 13, 
                            severity = 'info', 
                            text = 'Error occurred.', )
                        ], ),
                generation = 0,
                on_demand = False,
                resource_uri = '/api/v1/storage-systems/device-type2/2a0df0fe6f7dc7bb16000000000000000000004817'
            )
        else:
            return NimbleHealthStatusDetailsWithRequestUri(
        )
        """

    def testNimbleHealthStatusDetailsWithRequestUri(self):
        """Test NimbleHealthStatusDetailsWithRequestUri"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
