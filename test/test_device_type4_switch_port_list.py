# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_switch_port_list import DeviceType4SwitchPortList

class TestDeviceType4SwitchPortList(unittest.TestCase):
    """DeviceType4SwitchPortList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4SwitchPortList:
        """Test DeviceType4SwitchPortList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4SwitchPortList`
        """
        model = DeviceType4SwitchPortList()
        if include_optional:
            return DeviceType4SwitchPortList(
                associated_links = [{"resourceUri":"/v1/storage-systems/device-type4/2FF70002AC01F0FF","type":"systems"}],
                common_resource_attributes = dscc.models.common_resource_attributes.commonResourceAttributes(
                    cloud_state = 'CONNECTED', ),
                customer_id = 'string',
                device = 'node1',
                device_port = '2:2',
                displayname = 'Switch sw1 port 14',
                domain = 'switch',
                enclosure = 'cage1',
                generation = 0,
                id = '9c3c4f29a82fd8d632ff379116fa0b8f',
                ip_address = '16.1.9.2',
                mac_address = '90:20:c2:c2:35:00',
                port_description = 'eth14',
                resource_uri = '/v1/storage-systems/device-type4/2FF70002AC018D94/switch-port/8621946048c1cb24bdfc57e9b3b460ac',
                state = dscc.models.device_type4_state.DeviceType4State(
                    detailed = [
                        ''
                        ], 
                    overall = 'STATE_NORMAL', ),
                switch_name = 'sw1',
                switch_port_id = 1,
                switch_uid = '9c3c4f29a82fd8d632ff379116fa0b8f',
                system_id = '7CE751P312',
                type = 'string'
            )
        else:
            return DeviceType4SwitchPortList(
        )
        """

    def testDeviceType4SwitchPortList(self):
        """Test DeviceType4SwitchPortList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
