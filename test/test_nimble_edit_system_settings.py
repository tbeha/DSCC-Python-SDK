# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_edit_system_settings import NimbleEditSystemSettings

class TestNimbleEditSystemSettings(unittest.TestCase):
    """NimbleEditSystemSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleEditSystemSettings:
        """Test NimbleEditSystemSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleEditSystemSettings`
        """
        model = NimbleEditSystemSettings()
        if include_optional:
            return NimbleEditSystemSettings(
                alert_settings = dscc.models.edit_alert_settings.EditAlertSettings(
                    alert_from_email_addr = 'bob@wikipedia.com', 
                    alert_min_level = 'warning', 
                    alert_to_email_addrs = 'bob@wikipedia.com,jason@wiki.com', 
                    send_alert_to_support = True, ),
                date_timezone_settings = dscc.models.edit_date_timezone_settings.EditDateTimezoneSettings(
                    date = 1598267193, 
                    ntp_server = '0.abc.pool.ntp.org', 
                    timezone = 'America/Los_Angeles', ),
                dns_settings = dscc.models.edit_dns_settings.EditDnsSettings(
                    dns_servers = [
                        dscc.models.ip_address_object.IPAddressObject(
                            ip_addr = '10.0.0.11', )
                        ], 
                    domain_name = 'example-1.com', ),
                encryption_config = dscc.models.encryption_settings.EncryptionSettings(
                    cipher = 'none', 
                    encryption_active = True, 
                    encryption_key_manager = 'local', 
                    master_key_set = True, 
                    mode = 'none', 
                    scope = 'none', ),
                isns_settings = dscc.models.edit_isns_settings.EditIsnsSettings(
                    isns_enabled = True, 
                    isns_port = 1080, 
                    isns_server = 'isns-server.com', ),
                name = 'NimbleGroup55',
                proxy_settings = dscc.models.edit_proxy_settings.EditProxySettings(
                    proxy_port = 1234, 
                    proxy_server = 'example-1.com', 
                    proxy_username = 'usr1', ),
                security_settings = dscc.models.edit_security_settings.EditSecuritySettings(
                    user_inactivity_timeout = 1800, ),
                smtp_settings = dscc.models.edit_smtp_mail_settings.EditSmtpMailSettings(
                    smtp_port = 25, 
                    smtp_server = 'example.hpe.com', ),
                snmp_settings = dscc.models.edit_snmp_settings.EditSnmpSettings(
                    snmp_community = 'private', 
                    snmp_get_enabled = True, 
                    snmp_get_port = 1080, 
                    snmp_sys_contact = 'System contact', 
                    snmp_sys_location = 'Location', 
                    snmp_trap_enabled = True, 
                    snmp_trap_host = 'snmphost-1.com', 
                    snmp_trap_port = 1080, ),
                support_settings = dscc.models.edit_support_settings.EditSupportSettings(
                    allow_analytics_gui = False, 
                    allow_support_tunnel = False, 
                    autosupport_enabled = True, ),
                syslogd_settings = dscc.models.edit_syslogd_settings.EditSyslogdSettings(
                    syslogd_enabled = True, 
                    syslogd_port = 1080, 
                    syslogd_server = 'sysloghost-1.com', 
                    syslogd_servers = [
                        dscc.models.nimble_syslogd_server_info.NimbleSyslogdServerInfo(
                            syslog_port = 1080, 
                            syslog_server = 'sysloghost-1.com', )
                        ], ),
                system_parameters = dscc.models.edit_system_parameters.EditSystemParameters(
                    alarms_enabled = True, 
                    default_volume_limit = 10, 
                    fc_enabled = True, 
                    group_target_enabled = True, 
                    iscsi_enabled = True, 
                    repl_throttle_list = [
                        dscc.models.edit_throttle.EditThrottle(
                            days = 'monday,tuesday', 
                            description = 'Throttle one', 
                            thr_at_time = 10800, 
                            thr_bandwidth = 14, 
                            thr_bandwidth_kbps = 1400, 
                            thr_bandwidth_limit_kbps = 1400, 
                            thr_until_time = 14400, )
                        ], 
                    vss_validation_timeout = 60, )
            )
        else:
            return NimbleEditSystemSettings(
        )
        """

    def testNimbleEditSystemSettings(self):
        """Test NimbleEditSystemSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
