# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4_system_config_params import DeviceType4SystemConfigParams

class TestDeviceType4SystemConfigParams(unittest.TestCase):
    """DeviceType4SystemConfigParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4SystemConfigParams:
        """Test DeviceType4SystemConfigParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4SystemConfigParams`
        """
        model = DeviceType4SystemConfigParams()
        if include_optional:
            return DeviceType4SystemConfigParams(
                items = dscc.models.device_type4system_settings_details.DeviceType4systemSettingsDetails(
                    associated_links = [{"resourceUri":"/api/v1/storage-systems/device-type4/{id}","type":"systems"}], 
                    auth_mode = 'Time-based one-time password mode', 
                    common_resource_attributes = dscc.models.common_resource_attributes.commonResourceAttributes(
                        cloud_state = 'CONNECTED', ), 
                    console_uri = 'data-ops-manager/storage-systems/device-type4/SGH014XGSP/settings/system-settings', 
                    customer_id = 'fv5f41632a53497e88cdcebc715cc1cf', 
                    encryption = dscc.models.device_type4system_settings_details_encryption.DeviceType4systemSettingsDetails_encryption(
                        backup_saved = False, 
                        dar_state = 'normal', 
                        enabled = False, 
                        failed_disks = 2, 
                        fips_compliant = 'NotCompliant', 
                        key_location = 'LKM', 
                        kmpi_protocols = ["1.1","1.2"], 
                        licensed = False, 
                        not_fipspd = 2, 
                        not_node_sed = 2, 
                        not_sedpd = 2, 
                        seq_num = 2, 
                        server_count = 2, 
                        server_names = ["server1","server2"], 
                        server_port = 2, 
                        server_user = 'Username', ), 
                    generation = 1627541300145, 
                    installationsites = dscc.models.device_type4system_settings_details_installationsites.DeviceType4systemSettingsDetails_installationsites(
                        city = 'Bangalore', 
                        company = 'Hewlett Packard Enterprise', 
                        country = 'India', 
                        hpe_passport_id = 'annajohn@gmail.com', 
                        hpe_password = 'password', 
                        id = '2FF70002AC07E9C6', 
                        postal_code = '560001', 
                        set_system_location = False, 
                        state = 'Karnataka', 
                        street_address = '7992 Woodland Street', 
                        support_provider = 'HPE', 
                        system_id = '7CE751P312', ), 
                    is_fips_enabled = False, 
                    name = 'Array1', 
                    ntp_server = '15.213.68.208', 
                    remote_syslog_settings = dscc.models.device_type4system_settings_details_remote_syslog_settings.DeviceType4systemSettingsDetails_remoteSyslogSettings(
                        remote_sys_log = 0, 
                        remote_sys_log_host = '[ 4.3.2.1:8080,1.2.3.4:8080 ]', 
                        remote_sys_log_security_host = '[ 5.6.7.8:8080,8.7.5.6:8080 ]', ), 
                    srinfo = dscc.models.device_type4system_settings_details_srinfo.DeviceType4systemSettingsDetails_srinfo(
                        percent_used = 2, 
                        total_capacity_mi_b = 90714, 
                        used_capacity_mi_b = 1559, ), 
                    supportcontact = dscc.models.device_type4_contacts_details.DeviceType4ContactsDetails(
                        company = 'HPE', 
                        company_code = 'HPE', 
                        country = 'US', 
                        fax = 'fax_id', 
                        first_name = 'john', 
                        id = '67d09515-8526-9b02-c0c4-c1f443a39402', 
                        include_svc_alerts = False, 
                        last_name = 'kevin', 
                        notification_severities = [0,1,2,3,4,5], 
                        preferred_language = 'en', 
                        primary_email = 'kevin.john@hpe.com', 
                        primary_phone = '98783456', 
                        receive_email = True, 
                        receive_grouped = True, 
                        secondary_email = 'winny.pooh@hpe.com', 
                        secondary_phone = '23456789', 
                        system_id = '7CE751P312', 
                        system_support_contact = False, ), 
                    system_date = 1580068830, 
                    system_id = '7CE751P312', 
                    system_parameters = dscc.models.device_type4system_settings_details_system_parameters.DeviceType4systemSettingsDetails_systemParameters(
                        fc_raw_space_alert = 1, 
                        max_volume_retention = 1209600, 
                        overprov_ratio_limit = 0, 
                        overprov_ratio_warning = 0, ), 
                    timezone = 'Asia/Calcutta', 
                    type = 'system-settings', ),
                request_uri = '/api/v1/storage-systems/device-type4/7CE809P009/system-settings'
            )
        else:
            return DeviceType4SystemConfigParams(
        )
        """

    def testDeviceType4SystemConfigParams(self):
        """Test DeviceType4SystemConfigParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
