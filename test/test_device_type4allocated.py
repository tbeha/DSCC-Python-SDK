# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.device_type4allocated import DeviceType4allocated

class TestDeviceType4allocated(unittest.TestCase):
    """DeviceType4allocated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceType4allocated:
        """Test DeviceType4allocated
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceType4allocated`
        """
        model = DeviceType4allocated()
        if include_optional:
            return DeviceType4allocated(
                cpgs = 0,
                cpgs_free = 0,
                cpgs_private = 0,
                cpgs_private_base = dscc.models.device_type4private.DeviceType4private(
                    reserved = 1.337, 
                    reserved_v_vols = 1.337, 
                    total = 1.337, ),
                cpgs_private_snap = dscc.models.device_type4allocated_cpgs_private_snap.DeviceType4allocated_cpgsPrivateSnap(
                    reserved = 1.337, 
                    reserved_v_vols = 1.337, 
                    total = 1.337, ),
                cpgs_shared = 0,
                legacy_volumes = 0,
                legacy_volumes_snap = 0,
                legacy_volumes_user = 0,
                system = 3782656,
                system_admin = 0,
                system_internal = 122880,
                system_spare = 3659776,
                system_spare_unused = 3659776,
                system_spare_used = 0,
                total = 7152640,
                unmapped = 0
            )
        else:
            return DeviceType4allocated(
        )
        """

    def testDeviceType4allocated(self):
        """Test DeviceType4allocated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
