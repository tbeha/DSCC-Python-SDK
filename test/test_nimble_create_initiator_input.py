# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dscc.models.nimble_create_initiator_input import NimbleCreateInitiatorInput

class TestNimbleCreateInitiatorInput(unittest.TestCase):
    """NimbleCreateInitiatorInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NimbleCreateInitiatorInput:
        """Test NimbleCreateInitiatorInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NimbleCreateInitiatorInput`
        """
        model = NimbleCreateInitiatorInput()
        if include_optional:
            return NimbleCreateInitiatorInput(
                access_protocol = 'iscsi',
                alias = 'my_initiator-4',
                chapuser_id = '011c9973433673c3db000000000000000000000000',
                initiator_group_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
                ip_address = 'iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579',
                iqn = 'iqn.2007-11.com.storage:zmytestvol1-v0df0fe6f7dc7bb16.0000016b.70374579',
                label = 'myobject-5',
                override_existing_alias = True,
                wwpn = 'af:32:f1:20:bc:ba:43:1a'
            )
        else:
            return NimbleCreateInitiatorInput(
                access_protocol = 'iscsi',
                initiator_group_id = '2a0df0fe6f7dc7bb16000000000000000000004817',
        )
        """

    def testNimbleCreateInitiatorInput(self):
        """Test NimbleCreateInitiatorInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
