# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API

    The version of the OpenAPI document: 1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from dscc.models.audit_results import AuditResults

from dscc.api_client import ApiClient, RequestSerialized
from dscc.api_response import ApiResponse
from dscc.rest import RESTResponseType


class AuditApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def audit_events_get(
        self,
        filter: Annotated[Optional[StrictStr], Field(description="Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="The number of results to return")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="The number of results to skip")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="A comma separated list of properties to sort by, followed by a direction  indicator (\"asc\" or \"desc\"). If no direction indicator is specified the  default order is ascending. - e.g. state,version desc. Currently only support sorting by 1 property per request")] = None,
        select: Annotated[Optional[StrictStr], Field(description="A list of properties to include in the response. Currently only support returning of all fields.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AuditResults:
        """GET audit-events

        returns the audit events

        :param filter: Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z
        :type filter: str
        :param limit: The number of results to return
        :type limit: int
        :param offset: The number of results to skip
        :type offset: int
        :param sort: A comma separated list of properties to sort by, followed by a direction  indicator (\"asc\" or \"desc\"). If no direction indicator is specified the  default order is ascending. - e.g. state,version desc. Currently only support sorting by 1 property per request
        :type sort: str
        :param select: A list of properties to include in the response. Currently only support returning of all fields.
        :type select: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._audit_events_get_serialize(
            filter=filter,
            limit=limit,
            offset=offset,
            sort=sort,
            select=select,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AuditResults",
            '400': "AuditBadRequest",
            '403': "AuditUserForbidden",
            '500': "AuditInternalServerError",
            '503': "AuditServiceUnavailable",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def audit_events_get_with_http_info(
        self,
        filter: Annotated[Optional[StrictStr], Field(description="Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="The number of results to return")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="The number of results to skip")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="A comma separated list of properties to sort by, followed by a direction  indicator (\"asc\" or \"desc\"). If no direction indicator is specified the  default order is ascending. - e.g. state,version desc. Currently only support sorting by 1 property per request")] = None,
        select: Annotated[Optional[StrictStr], Field(description="A list of properties to include in the response. Currently only support returning of all fields.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AuditResults]:
        """GET audit-events

        returns the audit events

        :param filter: Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z
        :type filter: str
        :param limit: The number of results to return
        :type limit: int
        :param offset: The number of results to skip
        :type offset: int
        :param sort: A comma separated list of properties to sort by, followed by a direction  indicator (\"asc\" or \"desc\"). If no direction indicator is specified the  default order is ascending. - e.g. state,version desc. Currently only support sorting by 1 property per request
        :type sort: str
        :param select: A list of properties to include in the response. Currently only support returning of all fields.
        :type select: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._audit_events_get_serialize(
            filter=filter,
            limit=limit,
            offset=offset,
            sort=sort,
            select=select,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AuditResults",
            '400': "AuditBadRequest",
            '403': "AuditUserForbidden",
            '500': "AuditInternalServerError",
            '503': "AuditServiceUnavailable",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def audit_events_get_without_preload_content(
        self,
        filter: Annotated[Optional[StrictStr], Field(description="Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z")] = None,
        limit: Annotated[Optional[StrictInt], Field(description="The number of results to return")] = None,
        offset: Annotated[Optional[StrictInt], Field(description="The number of results to skip")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="A comma separated list of properties to sort by, followed by a direction  indicator (\"asc\" or \"desc\"). If no direction indicator is specified the  default order is ascending. - e.g. state,version desc. Currently only support sorting by 1 property per request")] = None,
        select: Annotated[Optional[StrictStr], Field(description="A list of properties to include in the response. Currently only support returning of all fields.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """GET audit-events

        returns the audit events

        :param filter: Filter criteria - e.g. state eq Failure and occurredAt gt 2020-09-08T16:51:33Z
        :type filter: str
        :param limit: The number of results to return
        :type limit: int
        :param offset: The number of results to skip
        :type offset: int
        :param sort: A comma separated list of properties to sort by, followed by a direction  indicator (\"asc\" or \"desc\"). If no direction indicator is specified the  default order is ascending. - e.g. state,version desc. Currently only support sorting by 1 property per request
        :type sort: str
        :param select: A list of properties to include in the response. Currently only support returning of all fields.
        :type select: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._audit_events_get_serialize(
            filter=filter,
            limit=limit,
            offset=offset,
            sort=sort,
            select=select,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AuditResults",
            '400': "AuditBadRequest",
            '403': "AuditUserForbidden",
            '500': "AuditInternalServerError",
            '503': "AuditServiceUnavailable",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _audit_events_get_serialize(
        self,
        filter,
        limit,
        offset,
        sort,
        select,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('filter', filter))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if offset is not None:
            
            _query_params.append(('offset', offset))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if select is not None:
            
            _query_params.append(('select', select))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'JWTAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v1/audit-events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


